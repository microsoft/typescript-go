SourceFile
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      ImportEqualsDeclaration
        Identifier: ' EventEmitter'
        ExternalModuleReference
          StringLiteral
      InterfaceDeclaration
        Identifier: ' InspectorNotification'
        TypeParameter
          Identifier: 'T'
        PropertySignature
          Identifier: '
        method'
          StringKeyword
        PropertySignature
          Identifier: '
        params'
          TypeReference
            Identifier: ' T'
      ModuleDeclaration
        Identifier: ' Schema'
        ModuleBlock
          InterfaceDeclaration
            Identifier: ' Domain'
            PropertySignature
              Identifier: '
            /**
             * Domain name.
             */
            name'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Domain version.
             */
            version'
              StringKeyword
          InterfaceDeclaration
            Identifier: ' GetDomainsReturnType'
            PropertySignature
              Identifier: '
            /**
             * List of supported domains.
             */
            domains'
              ArrayType
                TypeReference
                  Identifier: ' Domain'
      ModuleDeclaration
        Identifier: ' Runtime'
        ModuleBlock
          TypeAliasDeclaration
            Identifier: ' ScriptId'
            StringKeyword
          TypeAliasDeclaration
            Identifier: ' RemoteObjectId'
            StringKeyword
          TypeAliasDeclaration
            Identifier: ' UnserializableValue'
            StringKeyword
          InterfaceDeclaration
            Identifier: ' RemoteObject'
            PropertySignature
              Identifier: '
            /**
             * Object type.
             */
            type'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Object subtype hint. Specified for <code>object</code> type values only.
             */
            subtype'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Object class (constructor) name. Specified for <code>object</code> type values only.
             */
            className'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Remote object value in case of primitive values or JSON values (if it was requested).
             */
            value'
              QuestionToken
              AnyKeyword
            PropertySignature
              Identifier: '
            /**
             * Primitive value which can not be JSON-stringified does not have <code>value</code>, but gets this property.
             */
            unserializableValue'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' UnserializableValue'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * String representation of the object.
             */
            description'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Unique object identifier (for non-primitive values).
             */
            objectId'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' RemoteObjectId'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Preview containing abbreviated property values. Specified for <code>object</code> type values only.
             * @experimental
             */
            preview'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' ObjectPreview'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * @experimental
             */
            customPreview'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' CustomPreview'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' CustomPreview'
            PropertySignature
              Identifier: '
            header'
              StringKeyword
            PropertySignature
              Identifier: '
            hasBody'
              BooleanKeyword
            PropertySignature
              Identifier: '
            formatterObjectId'
              TypeReference
                Identifier: ' RemoteObjectId'
            PropertySignature
              Identifier: '
            bindRemoteObjectFunctionId'
              TypeReference
                Identifier: ' RemoteObjectId'
            PropertySignature
              Identifier: '
            configObjectId'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' RemoteObjectId'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' ObjectPreview'
            PropertySignature
              Identifier: '
            /**
             * Object type.
             */
            type'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Object subtype hint. Specified for <code>object</code> type values only.
             */
            subtype'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * String representation of the object.
             */
            description'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * True iff some of the properties or entries of the original object did not fit.
             */
            overflow'
              BooleanKeyword
            PropertySignature
              Identifier: '
            /**
             * List of the properties.
             */
            properties'
              ArrayType
                TypeReference
                  Identifier: ' PropertyPreview'
            PropertySignature
              Identifier: '
            /**
             * List of the entries. Specified for <code>map</code> and <code>set</code> subtype values only.
             */
            entries'
              QuestionToken
              UnionType
                ArrayType
                  TypeReference
                    Identifier: ' EntryPreview'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' PropertyPreview'
            PropertySignature
              Identifier: '
            /**
             * Property name.
             */
            name'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Object type. Accessor means that the property itself is an accessor property.
             */
            type'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * User-friendly property value string.
             */
            value'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Nested value preview.
             */
            valuePreview'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' ObjectPreview'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Object subtype hint. Specified for <code>object</code> type values only.
             */
            subtype'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' EntryPreview'
            PropertySignature
              Identifier: '
            /**
             * Preview of the key. Specified for map-like collection entries.
             */
            key'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' ObjectPreview'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Preview of the value.
             */
            value'
              TypeReference
                Identifier: ' ObjectPreview'
          InterfaceDeclaration
            Identifier: ' PropertyDescriptor'
            PropertySignature
              Identifier: '
            /**
             * Property name or symbol description.
             */
            name'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * The value associated with the property.
             */
            value'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' RemoteObject'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * True if the value associated with the property may be changed (data descriptors only).
             */
            writable'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * A function which serves as a getter for the property, or <code>undefined</code> if there is no getter (accessor descriptors only).
             */
            get'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' RemoteObject'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * A function which serves as a setter for the property, or <code>undefined</code> if there is no setter (accessor descriptors only).
             */
            set'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' RemoteObject'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * True if the type of this property descriptor may be changed and if the property may be deleted from the corresponding object.
             */
            configurable'
              BooleanKeyword
            PropertySignature
              Identifier: '
            /**
             * True if this property shows up during enumeration of the properties on the corresponding object.
             */
            enumerable'
              BooleanKeyword
            PropertySignature
              Identifier: '
            /**
             * True if the result was thrown during the evaluation.
             */
            wasThrown'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * True if the property is owned for the object.
             */
            isOwn'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Property symbol object, if the property is of the <code>symbol</code> type.
             */
            symbol'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' RemoteObject'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' InternalPropertyDescriptor'
            PropertySignature
              Identifier: '
            /**
             * Conventional property name.
             */
            name'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * The value associated with the property.
             */
            value'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' RemoteObject'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' CallArgument'
            PropertySignature
              Identifier: '
            /**
             * Primitive value or serializable javascript object.
             */
            value'
              QuestionToken
              AnyKeyword
            PropertySignature
              Identifier: '
            /**
             * Primitive value which can not be JSON-stringified.
             */
            unserializableValue'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' UnserializableValue'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Remote object handle.
             */
            objectId'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' RemoteObjectId'
                UndefinedKeyword
          TypeAliasDeclaration
            Identifier: ' ExecutionContextId'
            NumberKeyword
          InterfaceDeclaration
            Identifier: ' ExecutionContextDescription'
            PropertySignature
              Identifier: '
            /**
             * Unique id of the execution context. It can be used to specify in which execution context script evaluation should be performed.
             */
            id'
              TypeReference
                Identifier: ' ExecutionContextId'
            PropertySignature
              Identifier: '
            /**
             * Execution context origin.
             */
            origin'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Human readable name describing given context.
             */
            name'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Embedder-specific auxiliary data.
             */
            auxData'
              QuestionToken
              UnionType
                TypeLiteral
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' ExceptionDetails'
            PropertySignature
              Identifier: '
            /**
             * Exception id.
             */
            exceptionId'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Exception text, which should be used together with exception object when available.
             */
            text'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Line number of the exception location (0-based).
             */
            lineNumber'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Column number of the exception location (0-based).
             */
            columnNumber'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Script ID of the exception location.
             */
            scriptId'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' ScriptId'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * URL of the exception location, to be used when the script was not reported.
             */
            url'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * JavaScript stack trace if available.
             */
            stackTrace'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' StackTrace'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Exception object if available.
             */
            exception'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' RemoteObject'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Identifier of the context where exception happened.
             */
            executionContextId'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' ExecutionContextId'
                UndefinedKeyword
          TypeAliasDeclaration
            Identifier: ' Timestamp'
            NumberKeyword
          InterfaceDeclaration
            Identifier: ' CallFrame'
            PropertySignature
              Identifier: '
            /**
             * JavaScript function name.
             */
            functionName'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * JavaScript script id.
             */
            scriptId'
              TypeReference
                Identifier: ' ScriptId'
            PropertySignature
              Identifier: '
            /**
             * JavaScript script name or url.
             */
            url'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * JavaScript script line number (0-based).
             */
            lineNumber'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * JavaScript script column number (0-based).
             */
            columnNumber'
              NumberKeyword
          InterfaceDeclaration
            Identifier: ' StackTrace'
            PropertySignature
              Identifier: '
            /**
             * String label of this stack trace. For async traces this may be a name of the function that initiated the async call.
             */
            description'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * JavaScript function name.
             */
            callFrames'
              ArrayType
                TypeReference
                  Identifier: ' CallFrame'
            PropertySignature
              Identifier: '
            /**
             * Asynchronous JavaScript stack trace that preceded this stack, if available.
             */
            parent'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' StackTrace'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Asynchronous JavaScript stack trace that preceded this stack, if available.
             * @experimental
             */
            parentId'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' StackTraceId'
                UndefinedKeyword
          TypeAliasDeclaration
            Identifier: ' UniqueDebuggerId'
            StringKeyword
          InterfaceDeclaration
            Identifier: ' StackTraceId'
            PropertySignature
              Identifier: '
            id'
              StringKeyword
            PropertySignature
              Identifier: '
            debuggerId'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' UniqueDebuggerId'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' EvaluateParameterType'
            PropertySignature
              Identifier: '
            /**
             * Expression to evaluate.
             */
            expression'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Symbolic group name that can be used to release multiple objects.
             */
            objectGroup'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Determines whether Command Line API should be available during the evaluation.
             */
            includeCommandLineAPI'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * In silent mode exceptions thrown during evaluation are not reported and do not pause execution. Overrides <code>setPauseOnException</code> state.
             */
            silent'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Specifies in which execution context to perform evaluation. If the parameter is omitted the evaluation will be performed in the context of the inspected page.
             */
            contextId'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' ExecutionContextId'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Whether the result is expected to be a JSON object that should be sent by value.
             */
            returnByValue'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Whether preview should be generated for the result.
             * @experimental
             */
            generatePreview'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Whether execution should be treated as initiated by user in the UI.
             */
            userGesture'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Whether execution should <code>await</code> for resulting value and return once awaited promise is resolved.
             */
            awaitPromise'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' AwaitPromiseParameterType'
            PropertySignature
              Identifier: '
            /**
             * Identifier of the promise.
             */
            promiseObjectId'
              TypeReference
                Identifier: ' RemoteObjectId'
            PropertySignature
              Identifier: '
            /**
             * Whether the result is expected to be a JSON object that should be sent by value.
             */
            returnByValue'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Whether preview should be generated for the result.
             */
            generatePreview'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' CallFunctionOnParameterType'
            PropertySignature
              Identifier: '
            /**
             * Declaration of the function to call.
             */
            functionDeclaration'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Identifier of the object to call function on. Either objectId or executionContextId should be specified.
             */
            objectId'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' RemoteObjectId'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Call arguments. All call arguments must belong to the same JavaScript world as the target object.
             */
            arguments'
              QuestionToken
              UnionType
                ArrayType
                  TypeReference
                    Identifier: ' CallArgument'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * In silent mode exceptions thrown during evaluation are not reported and do not pause execution. Overrides <code>setPauseOnException</code> state.
             */
            silent'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Whether the result is expected to be a JSON object which should be sent by value.
             */
            returnByValue'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Whether preview should be generated for the result.
             * @experimental
             */
            generatePreview'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Whether execution should be treated as initiated by user in the UI.
             */
            userGesture'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Whether execution should <code>await</code> for resulting value and return once awaited promise is resolved.
             */
            awaitPromise'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Specifies execution context which global object will be used to call function on. Either executionContextId or objectId should be specified.
             */
            executionContextId'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' ExecutionContextId'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Symbolic group name that can be used to release multiple objects. If objectGroup is not specified and objectId is, objectGroup will be inherited from object.
             */
            objectGroup'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' GetPropertiesParameterType'
            PropertySignature
              Identifier: '
            /**
             * Identifier of the object to return properties for.
             */
            objectId'
              TypeReference
                Identifier: ' RemoteObjectId'
            PropertySignature
              Identifier: '
            /**
             * If true, returns properties belonging only to the element itself, not to its prototype chain.
             */
            ownProperties'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * If true, returns accessor properties (with getter/setter) only; internal properties are not returned either.
             * @experimental
             */
            accessorPropertiesOnly'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Whether preview should be generated for the results.
             * @experimental
             */
            generatePreview'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' ReleaseObjectParameterType'
            PropertySignature
              Identifier: '
            /**
             * Identifier of the object to release.
             */
            objectId'
              TypeReference
                Identifier: ' RemoteObjectId'
          InterfaceDeclaration
            Identifier: ' ReleaseObjectGroupParameterType'
            PropertySignature
              Identifier: '
            /**
             * Symbolic object group name.
             */
            objectGroup'
              StringKeyword
          InterfaceDeclaration
            Identifier: ' SetCustomObjectFormatterEnabledParameterType'
            PropertySignature
              Identifier: '
            enabled'
              BooleanKeyword
          InterfaceDeclaration
            Identifier: ' CompileScriptParameterType'
            PropertySignature
              Identifier: '
            /**
             * Expression to compile.
             */
            expression'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Source url to be set for the script.
             */
            sourceURL'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Specifies whether the compiled script should be persisted.
             */
            persistScript'
              BooleanKeyword
            PropertySignature
              Identifier: '
            /**
             * Specifies in which execution context to perform script run. If the parameter is omitted the evaluation will be performed in the context of the inspected page.
             */
            executionContextId'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' ExecutionContextId'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' RunScriptParameterType'
            PropertySignature
              Identifier: '
            /**
             * Id of the script to run.
             */
            scriptId'
              TypeReference
                Identifier: ' ScriptId'
            PropertySignature
              Identifier: '
            /**
             * Specifies in which execution context to perform script run. If the parameter is omitted the evaluation will be performed in the context of the inspected page.
             */
            executionContextId'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' ExecutionContextId'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Symbolic group name that can be used to release multiple objects.
             */
            objectGroup'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * In silent mode exceptions thrown during evaluation are not reported and do not pause execution. Overrides <code>setPauseOnException</code> state.
             */
            silent'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Determines whether Command Line API should be available during the evaluation.
             */
            includeCommandLineAPI'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Whether the result is expected to be a JSON object which should be sent by value.
             */
            returnByValue'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Whether preview should be generated for the result.
             */
            generatePreview'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Whether execution should <code>await</code> for resulting value and return once awaited promise is resolved.
             */
            awaitPromise'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' QueryObjectsParameterType'
            PropertySignature
              Identifier: '
            /**
             * Identifier of the prototype to return objects for.
             */
            prototypeObjectId'
              TypeReference
                Identifier: ' RemoteObjectId'
          InterfaceDeclaration
            Identifier: ' GlobalLexicalScopeNamesParameterType'
            PropertySignature
              Identifier: '
            /**
             * Specifies in which execution context to lookup global scope variables.
             */
            executionContextId'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' ExecutionContextId'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' EvaluateReturnType'
            PropertySignature
              Identifier: '
            /**
             * Evaluation result.
             */
            result'
              TypeReference
                Identifier: ' RemoteObject'
            PropertySignature
              Identifier: '
            /**
             * Exception details.
             */
            exceptionDetails'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' ExceptionDetails'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' AwaitPromiseReturnType'
            PropertySignature
              Identifier: '
            /**
             * Promise result. Will contain rejected value if promise was rejected.
             */
            result'
              TypeReference
                Identifier: ' RemoteObject'
            PropertySignature
              Identifier: '
            /**
             * Exception details if stack strace is available.
             */
            exceptionDetails'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' ExceptionDetails'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' CallFunctionOnReturnType'
            PropertySignature
              Identifier: '
            /**
             * Call result.
             */
            result'
              TypeReference
                Identifier: ' RemoteObject'
            PropertySignature
              Identifier: '
            /**
             * Exception details.
             */
            exceptionDetails'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' ExceptionDetails'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' GetPropertiesReturnType'
            PropertySignature
              Identifier: '
            /**
             * Object properties.
             */
            result'
              ArrayType
                TypeReference
                  Identifier: ' PropertyDescriptor'
            PropertySignature
              Identifier: '
            /**
             * Internal object properties (only of the element itself).
             */
            internalProperties'
              QuestionToken
              UnionType
                ArrayType
                  TypeReference
                    Identifier: ' InternalPropertyDescriptor'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Exception details.
             */
            exceptionDetails'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' ExceptionDetails'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' CompileScriptReturnType'
            PropertySignature
              Identifier: '
            /**
             * Id of the script.
             */
            scriptId'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' ScriptId'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Exception details.
             */
            exceptionDetails'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' ExceptionDetails'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' RunScriptReturnType'
            PropertySignature
              Identifier: '
            /**
             * Run result.
             */
            result'
              TypeReference
                Identifier: ' RemoteObject'
            PropertySignature
              Identifier: '
            /**
             * Exception details.
             */
            exceptionDetails'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' ExceptionDetails'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' QueryObjectsReturnType'
            PropertySignature
              Identifier: '
            /**
             * Array with objects.
             */
            objects'
              TypeReference
                Identifier: ' RemoteObject'
          InterfaceDeclaration
            Identifier: ' GlobalLexicalScopeNamesReturnType'
            PropertySignature
              Identifier: '
            names'
              ArrayType
                StringKeyword
          InterfaceDeclaration
            Identifier: ' ExecutionContextCreatedEventDataType'
            PropertySignature
              Identifier: '
            /**
             * A newly created execution context.
             */
            context'
              TypeReference
                Identifier: ' ExecutionContextDescription'
          InterfaceDeclaration
            Identifier: ' ExecutionContextDestroyedEventDataType'
            PropertySignature
              Identifier: '
            /**
             * Id of the destroyed context
             */
            executionContextId'
              TypeReference
                Identifier: ' ExecutionContextId'
          InterfaceDeclaration
            Identifier: ' ExceptionThrownEventDataType'
            PropertySignature
              Identifier: '
            /**
             * Timestamp of the exception.
             */
            timestamp'
              TypeReference
                Identifier: ' Timestamp'
            PropertySignature
              Identifier: '
            exceptionDetails'
              TypeReference
                Identifier: ' ExceptionDetails'
          InterfaceDeclaration
            Identifier: ' ExceptionRevokedEventDataType'
            PropertySignature
              Identifier: '
            /**
             * Reason describing why exception was revoked.
             */
            reason'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * The id of revoked exception, as reported in <code>exceptionThrown</code>.
             */
            exceptionId'
              NumberKeyword
          InterfaceDeclaration
            Identifier: ' ConsoleAPICalledEventDataType'
            PropertySignature
              Identifier: '
            /**
             * Type of the call.
             */
            type'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Call arguments.
             */
            args'
              ArrayType
                TypeReference
                  Identifier: ' RemoteObject'
            PropertySignature
              Identifier: '
            /**
             * Identifier of the context where the call was made.
             */
            executionContextId'
              TypeReference
                Identifier: ' ExecutionContextId'
            PropertySignature
              Identifier: '
            /**
             * Call timestamp.
             */
            timestamp'
              TypeReference
                Identifier: ' Timestamp'
            PropertySignature
              Identifier: '
            /**
             * Stack trace captured when the call was made.
             */
            stackTrace'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' StackTrace'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Console context descriptor for calls on non-default console context (not console.*): 'anonymous#unique-logger-id' for call on unnamed context, 'name#unique-logger-id' for call on named context.
             * @experimental
             */
            context'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' InspectRequestedEventDataType'
            PropertySignature
              Identifier: '
            object'
              TypeReference
                Identifier: ' RemoteObject'
            PropertySignature
              Identifier: '
            hints'
              TypeLiteral
      ModuleDeclaration
        Identifier: ' Debugger'
        ModuleBlock
          TypeAliasDeclaration
            Identifier: ' BreakpointId'
            StringKeyword
          TypeAliasDeclaration
            Identifier: ' CallFrameId'
            StringKeyword
          InterfaceDeclaration
            Identifier: ' Location'
            PropertySignature
              Identifier: '
            /**
             * Script identifier as reported in the <code>Debugger.scriptParsed</code>.
             */
            scriptId'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'ScriptId'
            PropertySignature
              Identifier: '
            /**
             * Line number in the script (0-based).
             */
            lineNumber'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Column number in the script (0-based).
             */
            columnNumber'
              QuestionToken
              UnionType
                NumberKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' ScriptPosition'
            PropertySignature
              Identifier: '
            lineNumber'
              NumberKeyword
            PropertySignature
              Identifier: '
            columnNumber'
              NumberKeyword
          InterfaceDeclaration
            Identifier: ' CallFrame'
            PropertySignature
              Identifier: '
            /**
             * Call frame identifier. This identifier is only valid while the virtual machine is paused.
             */
            callFrameId'
              TypeReference
                Identifier: ' CallFrameId'
            PropertySignature
              Identifier: '
            /**
             * Name of the JavaScript function called on this call frame.
             */
            functionName'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Location in the source code.
             */
            functionLocation'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' Location'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Location in the source code.
             */
            location'
              TypeReference
                Identifier: ' Location'
            PropertySignature
              Identifier: '
            /**
             * JavaScript script name or url.
             */
            url'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Scope chain for this call frame.
             */
            scopeChain'
              ArrayType
                TypeReference
                  Identifier: ' Scope'
            PropertySignature
              Identifier: '
            /**
             * <code>this</code> object for this call frame.
             */
            this'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'RemoteObject'
            PropertySignature
              Identifier: '
            /**
             * The value being returned, if the function is at return point.
             */
            returnValue'
              QuestionToken
              UnionType
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'RemoteObject'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' Scope'
            PropertySignature
              Identifier: '
            /**
             * Scope type.
             */
            type'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Object representing the scope. For <code>global</code> and <code>with</code> scopes it represents the actual object; for the rest of the scopes, it is artificial transient object enumerating scope variables as its properties.
             */
            object'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'RemoteObject'
            PropertySignature
              Identifier: '
            name'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Location in the source code where scope starts
             */
            startLocation'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' Location'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Location in the source code where scope ends
             */
            endLocation'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' Location'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' SearchMatch'
            PropertySignature
              Identifier: '
            /**
             * Line number in resource content.
             */
            lineNumber'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Line with match content.
             */
            lineContent'
              StringKeyword
          InterfaceDeclaration
            Identifier: ' BreakLocation'
            PropertySignature
              Identifier: '
            /**
             * Script identifier as reported in the <code>Debugger.scriptParsed</code>.
             */
            scriptId'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'ScriptId'
            PropertySignature
              Identifier: '
            /**
             * Line number in the script (0-based).
             */
            lineNumber'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Column number in the script (0-based).
             */
            columnNumber'
              QuestionToken
              UnionType
                NumberKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            type'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' SetBreakpointsActiveParameterType'
            PropertySignature
              Identifier: '
            /**
             * New value for breakpoints active state.
             */
            active'
              BooleanKeyword
          InterfaceDeclaration
            Identifier: ' SetSkipAllPausesParameterType'
            PropertySignature
              Identifier: '
            /**
             * New value for skip pauses state.
             */
            skip'
              BooleanKeyword
          InterfaceDeclaration
            Identifier: ' SetBreakpointByUrlParameterType'
            PropertySignature
              Identifier: '
            /**
             * Line number to set breakpoint at.
             */
            lineNumber'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * URL of the resources to set breakpoint on.
             */
            url'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Regex pattern for the URLs of the resources to set breakpoints on. Either <code>url</code> or <code>urlRegex</code> must be specified.
             */
            urlRegex'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Script hash of the resources to set breakpoint on.
             */
            scriptHash'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Offset in the line to set breakpoint at.
             */
            columnNumber'
              QuestionToken
              UnionType
                NumberKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Expression to use as a breakpoint condition. When specified, debugger will only stop on the breakpoint if this expression evaluates to true.
             */
            condition'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' SetBreakpointParameterType'
            PropertySignature
              Identifier: '
            /**
             * Location to set breakpoint in.
             */
            location'
              TypeReference
                Identifier: ' Location'
            PropertySignature
              Identifier: '
            /**
             * Expression to use as a breakpoint condition. When specified, debugger will only stop on the breakpoint if this expression evaluates to true.
             */
            condition'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' RemoveBreakpointParameterType'
            PropertySignature
              Identifier: '
            breakpointId'
              TypeReference
                Identifier: ' BreakpointId'
          InterfaceDeclaration
            Identifier: ' GetPossibleBreakpointsParameterType'
            PropertySignature
              Identifier: '
            /**
             * Start of range to search possible breakpoint locations in.
             */
            start'
              TypeReference
                Identifier: ' Location'
            PropertySignature
              Identifier: '
            /**
             * End of range to search possible breakpoint locations in (excluding). When not specified, end of scripts is used as end of range.
             */
            end'
              QuestionToken
              UnionType
                TypeReference
                  Identifier: ' Location'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Only consider locations which are in the same (non-nested) function as start.
             */
            restrictToFunction'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' ContinueToLocationParameterType'
            PropertySignature
              Identifier: '
            /**
             * Location to continue to.
             */
            location'
              TypeReference
                Identifier: ' Location'
            PropertySignature
              Identifier: '
            targetCallFrames'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' PauseOnAsyncCallParameterType'
            PropertySignature
              Identifier: '
            /**
             * Debugger will pause when async call with given stack trace is started.
             */
            parentStackTraceId'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'StackTraceId'
          InterfaceDeclaration
            Identifier: ' StepIntoParameterType'
            PropertySignature
              Identifier: '
            /**
             * Debugger will issue additional Debugger.paused notification if any async task is scheduled before next pause.
             * @experimental
             */
            breakOnAsyncCall'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' GetStackTraceParameterType'
            PropertySignature
              Identifier: '
            stackTraceId'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'StackTraceId'
          InterfaceDeclaration
            Identifier: ' SearchInContentParameterType'
            PropertySignature
              Identifier: '
            /**
             * Id of the script to search in.
             */
            scriptId'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'ScriptId'
            PropertySignature
              Identifier: '
            /**
             * String to search for.
             */
            query'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * If true, search is case sensitive.
             */
            caseSensitive'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * If true, treats string parameter as regex.
             */
            isRegex'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' SetScriptSourceParameterType'
            PropertySignature
              Identifier: '
            /**
             * Id of the script to edit.
             */
            scriptId'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'ScriptId'
            PropertySignature
              Identifier: '
            /**
             * New content of the script.
             */
            scriptSource'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             *  If true the change will not actually be applied. Dry run may be used to get result description without actually modifying the code.
             */
            dryRun'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' RestartFrameParameterType'
            PropertySignature
              Identifier: '
            /**
             * Call frame identifier to evaluate on.
             */
            callFrameId'
              TypeReference
                Identifier: ' CallFrameId'
          InterfaceDeclaration
            Identifier: ' GetScriptSourceParameterType'
            PropertySignature
              Identifier: '
            /**
             * Id of the script to get source for.
             */
            scriptId'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'ScriptId'
          InterfaceDeclaration
            Identifier: ' SetPauseOnExceptionsParameterType'
            PropertySignature
              Identifier: '
            /**
             * Pause on exceptions mode.
             */
            state'
              StringKeyword
          InterfaceDeclaration
            Identifier: ' EvaluateOnCallFrameParameterType'
            PropertySignature
              Identifier: '
            /**
             * Call frame identifier to evaluate on.
             */
            callFrameId'
              TypeReference
                Identifier: ' CallFrameId'
            PropertySignature
              Identifier: '
            /**
             * Expression to evaluate.
             */
            expression'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * String object group name to put result into (allows rapid releasing resulting object handles using <code>releaseObjectGroup</code>).
             */
            objectGroup'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Specifies whether command line API should be available to the evaluated expression, defaults to false.
             */
            includeCommandLineAPI'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * In silent mode exceptions thrown during evaluation are not reported and do not pause execution. Overrides <code>setPauseOnException</code> state.
             */
            silent'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Whether the result is expected to be a JSON object that should be sent by value.
             */
            returnByValue'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Whether preview should be generated for the result.
             * @experimental
             */
            generatePreview'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Whether to throw an exception if side effect cannot be ruled out during evaluation.
             */
            throwOnSideEffect'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' SetVariableValueParameterType'
            PropertySignature
              Identifier: '
            /**
             * 0-based number of scope as was listed in scope chain. Only 'local', 'closure' and 'catch' scope types are allowed. Other scopes could be manipulated manually.
             */
            scopeNumber'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Variable name.
             */
            variableName'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * New variable value.
             */
            newValue'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'CallArgument'
            PropertySignature
              Identifier: '
            /**
             * Id of callframe that holds variable.
             */
            callFrameId'
              TypeReference
                Identifier: ' CallFrameId'
          InterfaceDeclaration
            Identifier: ' SetReturnValueParameterType'
            PropertySignature
              Identifier: '
            /**
             * New return value.
             */
            newValue'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'CallArgument'
          InterfaceDeclaration
            Identifier: ' SetAsyncCallStackDepthParameterType'
            PropertySignature
              Identifier: '
            /**
             * Maximum depth of async call stacks. Setting to <code>0</code> will effectively disable collecting async call stacks (default).
             */
            maxDepth'
              NumberKeyword
          InterfaceDeclaration
            Identifier: ' SetBlackboxPatternsParameterType'
            PropertySignature
              Identifier: '
            /**
             * Array of regexps that will be used to check script url for blackbox state.
             */
            patterns'
              ArrayType
                StringKeyword
          InterfaceDeclaration
            Identifier: ' SetBlackboxedRangesParameterType'
            PropertySignature
              Identifier: '
            /**
             * Id of the script.
             */
            scriptId'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'ScriptId'
            PropertySignature
              Identifier: '
            positions'
              ArrayType
                TypeReference
                  Identifier: ' ScriptPosition'
          InterfaceDeclaration
            Identifier: ' EnableReturnType'
            PropertySignature
              Identifier: '
            /**
             * Unique identifier of the debugger.
             * @experimental
             */
            debuggerId'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'UniqueDebuggerId'
          InterfaceDeclaration
            Identifier: ' SetBreakpointByUrlReturnType'
            PropertySignature
              Identifier: '
            /**
             * Id of the created breakpoint for further reference.
             */
            breakpointId'
              TypeReference
                Identifier: ' BreakpointId'
            PropertySignature
              Identifier: '
            /**
             * List of the locations this breakpoint resolved into upon addition.
             */
            locations'
              ArrayType
                TypeReference
                  Identifier: ' Location'
          InterfaceDeclaration
            Identifier: ' SetBreakpointReturnType'
            PropertySignature
              Identifier: '
            /**
             * Id of the created breakpoint for further reference.
             */
            breakpointId'
              TypeReference
                Identifier: ' BreakpointId'
            PropertySignature
              Identifier: '
            /**
             * Location this breakpoint resolved into.
             */
            actualLocation'
              TypeReference
                Identifier: ' Location'
          InterfaceDeclaration
            Identifier: ' GetPossibleBreakpointsReturnType'
            PropertySignature
              Identifier: '
            /**
             * List of the possible breakpoint locations.
             */
            locations'
              ArrayType
                TypeReference
                  Identifier: ' BreakLocation'
          InterfaceDeclaration
            Identifier: ' GetStackTraceReturnType'
            PropertySignature
              Identifier: '
            stackTrace'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'StackTrace'
          InterfaceDeclaration
            Identifier: ' SearchInContentReturnType'
            PropertySignature
              Identifier: '
            /**
             * List of search matches.
             */
            result'
              ArrayType
                TypeReference
                  Identifier: ' SearchMatch'
          InterfaceDeclaration
            Identifier: ' SetScriptSourceReturnType'
            PropertySignature
              Identifier: '
            /**
             * New stack trace in case editing has happened while VM was stopped.
             */
            callFrames'
              QuestionToken
              UnionType
                ArrayType
                  TypeReference
                    Identifier: ' CallFrame'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Whether current call stack  was modified after applying the changes.
             */
            stackChanged'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Async stack trace, if any.
             */
            asyncStackTrace'
              QuestionToken
              UnionType
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'StackTrace'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Async stack trace, if any.
             * @experimental
             */
            asyncStackTraceId'
              QuestionToken
              UnionType
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'StackTraceId'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Exception details if any.
             */
            exceptionDetails'
              QuestionToken
              UnionType
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'ExceptionDetails'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' RestartFrameReturnType'
            PropertySignature
              Identifier: '
            /**
             * New stack trace.
             */
            callFrames'
              ArrayType
                TypeReference
                  Identifier: ' CallFrame'
            PropertySignature
              Identifier: '
            /**
             * Async stack trace, if any.
             */
            asyncStackTrace'
              QuestionToken
              UnionType
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'StackTrace'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Async stack trace, if any.
             * @experimental
             */
            asyncStackTraceId'
              QuestionToken
              UnionType
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'StackTraceId'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' GetScriptSourceReturnType'
            PropertySignature
              Identifier: '
            /**
             * Script source.
             */
            scriptSource'
              StringKeyword
          InterfaceDeclaration
            Identifier: ' EvaluateOnCallFrameReturnType'
            PropertySignature
              Identifier: '
            /**
             * Object wrapper for the evaluation result.
             */
            result'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'RemoteObject'
            PropertySignature
              Identifier: '
            /**
             * Exception details.
             */
            exceptionDetails'
              QuestionToken
              UnionType
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'ExceptionDetails'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' ScriptParsedEventDataType'
            PropertySignature
              Identifier: '
            /**
             * Identifier of the script parsed.
             */
            scriptId'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'ScriptId'
            PropertySignature
              Identifier: '
            /**
             * URL or name of the script parsed (if any).
             */
            url'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Line offset of the script within the resource with given URL (for script tags).
             */
            startLine'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Column offset of the script within the resource with given URL.
             */
            startColumn'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Last line of the script.
             */
            endLine'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Length of the last line of the script.
             */
            endColumn'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Specifies script creation context.
             */
            executionContextId'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'ExecutionContextId'
            PropertySignature
              Identifier: '
            /**
             * Content hash of the script.
             */
            hash'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Embedder-specific auxiliary data.
             */
            executionContextAuxData'
              QuestionToken
              UnionType
                TypeLiteral
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * True, if this script is generated as a result of the live edit operation.
             * @experimental
             */
            isLiveEdit'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * URL of source map associated with script (if any).
             */
            sourceMapURL'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * True, if this script has sourceURL.
             */
            hasSourceURL'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * True, if this script is ES6 module.
             */
            isModule'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * This script length.
             */
            length'
              QuestionToken
              UnionType
                NumberKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * JavaScript top stack frame of where the script parsed event was triggered if available.
             * @experimental
             */
            stackTrace'
              QuestionToken
              UnionType
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'StackTrace'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' ScriptFailedToParseEventDataType'
            PropertySignature
              Identifier: '
            /**
             * Identifier of the script parsed.
             */
            scriptId'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'ScriptId'
            PropertySignature
              Identifier: '
            /**
             * URL or name of the script parsed (if any).
             */
            url'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Line offset of the script within the resource with given URL (for script tags).
             */
            startLine'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Column offset of the script within the resource with given URL.
             */
            startColumn'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Last line of the script.
             */
            endLine'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Length of the last line of the script.
             */
            endColumn'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Specifies script creation context.
             */
            executionContextId'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'ExecutionContextId'
            PropertySignature
              Identifier: '
            /**
             * Content hash of the script.
             */
            hash'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Embedder-specific auxiliary data.
             */
            executionContextAuxData'
              QuestionToken
              UnionType
                TypeLiteral
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * URL of source map associated with script (if any).
             */
            sourceMapURL'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * True, if this script has sourceURL.
             */
            hasSourceURL'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * True, if this script is ES6 module.
             */
            isModule'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * This script length.
             */
            length'
              QuestionToken
              UnionType
                NumberKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * JavaScript top stack frame of where the script parsed event was triggered if available.
             * @experimental
             */
            stackTrace'
              QuestionToken
              UnionType
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'StackTrace'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' BreakpointResolvedEventDataType'
            PropertySignature
              Identifier: '
            /**
             * Breakpoint unique identifier.
             */
            breakpointId'
              TypeReference
                Identifier: ' BreakpointId'
            PropertySignature
              Identifier: '
            /**
             * Actual breakpoint location.
             */
            location'
              TypeReference
                Identifier: ' Location'
          InterfaceDeclaration
            Identifier: ' PausedEventDataType'
            PropertySignature
              Identifier: '
            /**
             * Call stack the virtual machine stopped on.
             */
            callFrames'
              ArrayType
                TypeReference
                  Identifier: ' CallFrame'
            PropertySignature
              Identifier: '
            /**
             * Pause reason.
             */
            reason'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Object containing break-specific auxiliary properties.
             */
            data'
              QuestionToken
              UnionType
                TypeLiteral
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Hit breakpoints IDs
             */
            hitBreakpoints'
              QuestionToken
              UnionType
                ArrayType
                  StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Async stack trace, if any.
             */
            asyncStackTrace'
              QuestionToken
              UnionType
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'StackTrace'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Async stack trace, if any.
             * @experimental
             */
            asyncStackTraceId'
              QuestionToken
              UnionType
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'StackTraceId'
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Just scheduled async call will have this stack trace as parent stack during async execution. This field is available only after <code>Debugger.stepInto</code> call with <code>breakOnAsynCall</code> flag.
             * @experimental
             */
            asyncCallStackTraceId'
              QuestionToken
              UnionType
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'StackTraceId'
                UndefinedKeyword
      ModuleDeclaration
        Identifier: ' Console'
        ModuleBlock
          InterfaceDeclaration
            Identifier: ' ConsoleMessage'
            PropertySignature
              Identifier: '
            /**
             * Message source.
             */
            source'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Message severity.
             */
            level'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Message text.
             */
            text'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * URL of the message origin.
             */
            url'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Line number in the resource that generated this message (1-based).
             */
            line'
              QuestionToken
              UnionType
                NumberKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Column number in the resource that generated this message (1-based).
             */
            column'
              QuestionToken
              UnionType
                NumberKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' MessageAddedEventDataType'
            PropertySignature
              Identifier: '
            /**
             * Console message that has been added.
             */
            message'
              TypeReference
                Identifier: ' ConsoleMessage'
      ModuleDeclaration
        Identifier: ' Profiler'
        ModuleBlock
          InterfaceDeclaration
            Identifier: ' ProfileNode'
            PropertySignature
              Identifier: '
            /**
             * Unique id of the node.
             */
            id'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Function location.
             */
            callFrame'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'CallFrame'
            PropertySignature
              Identifier: '
            /**
             * Number of samples where this node was on top of the call stack.
             */
            hitCount'
              QuestionToken
              UnionType
                NumberKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Child node ids.
             */
            children'
              QuestionToken
              UnionType
                ArrayType
                  NumberKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * The reason of being not optimized. The function may be deoptimized or marked as don't optimize.
             */
            deoptReason'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * An array of source position ticks.
             */
            positionTicks'
              QuestionToken
              UnionType
                ArrayType
                  TypeReference
                    Identifier: ' PositionTickInfo'
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' Profile'
            PropertySignature
              Identifier: '
            /**
             * The list of profile nodes. First item is the root node.
             */
            nodes'
              ArrayType
                TypeReference
                  Identifier: ' ProfileNode'
            PropertySignature
              Identifier: '
            /**
             * Profiling start timestamp in microseconds.
             */
            startTime'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Profiling end timestamp in microseconds.
             */
            endTime'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Ids of samples top nodes.
             */
            samples'
              QuestionToken
              UnionType
                ArrayType
                  NumberKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Time intervals between adjacent samples in microseconds. The first delta is relative to the profile startTime.
             */
            timeDeltas'
              QuestionToken
              UnionType
                ArrayType
                  NumberKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' PositionTickInfo'
            PropertySignature
              Identifier: '
            /**
             * Source line number (1-based).
             */
            line'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Number of samples attributed to the source line.
             */
            ticks'
              NumberKeyword
          InterfaceDeclaration
            Identifier: ' CoverageRange'
            PropertySignature
              Identifier: '
            /**
             * JavaScript script source offset for the range start.
             */
            startOffset'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * JavaScript script source offset for the range end.
             */
            endOffset'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Collected execution count of the source range.
             */
            count'
              NumberKeyword
          InterfaceDeclaration
            Identifier: ' FunctionCoverage'
            PropertySignature
              Identifier: '
            /**
             * JavaScript function name.
             */
            functionName'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Source ranges inside the function with coverage data.
             */
            ranges'
              ArrayType
                TypeReference
                  Identifier: ' CoverageRange'
            PropertySignature
              Identifier: '
            /**
             * Whether coverage data for this function has block granularity.
             */
            isBlockCoverage'
              BooleanKeyword
          InterfaceDeclaration
            Identifier: ' ScriptCoverage'
            PropertySignature
              Identifier: '
            /**
             * JavaScript script id.
             */
            scriptId'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'ScriptId'
            PropertySignature
              Identifier: '
            /**
             * JavaScript script name or url.
             */
            url'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Functions contained in the script that has coverage data.
             */
            functions'
              ArrayType
                TypeReference
                  Identifier: ' FunctionCoverage'
          InterfaceDeclaration
            Identifier: ' SetSamplingIntervalParameterType'
            PropertySignature
              Identifier: '
            /**
             * New sampling interval in microseconds.
             */
            interval'
              NumberKeyword
          InterfaceDeclaration
            Identifier: ' StartPreciseCoverageParameterType'
            PropertySignature
              Identifier: '
            /**
             * Collect accurate call counts beyond simple 'covered' or 'not covered'.
             */
            callCount'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Collect block-based coverage.
             */
            detailed'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' StopReturnType'
            PropertySignature
              Identifier: '
            /**
             * Recorded profile.
             */
            profile'
              TypeReference
                Identifier: ' Profile'
          InterfaceDeclaration
            Identifier: ' TakePreciseCoverageReturnType'
            PropertySignature
              Identifier: '
            /**
             * Coverage data for the current isolate.
             */
            result'
              ArrayType
                TypeReference
                  Identifier: ' ScriptCoverage'
          InterfaceDeclaration
            Identifier: ' GetBestEffortCoverageReturnType'
            PropertySignature
              Identifier: '
            /**
             * Coverage data for the current isolate.
             */
            result'
              ArrayType
                TypeReference
                  Identifier: ' ScriptCoverage'
          InterfaceDeclaration
            Identifier: ' ConsoleProfileStartedEventDataType'
            PropertySignature
              Identifier: '
            id'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Location of console.profile().
             */
            location'
              TypeReference
                QualifiedName
                  Identifier: ' Debugger'
                  Identifier: 'Location'
            PropertySignature
              Identifier: '
            /**
             * Profile title passed as an argument to console.profile().
             */
            title'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' ConsoleProfileFinishedEventDataType'
            PropertySignature
              Identifier: '
            id'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Location of console.profileEnd().
             */
            location'
              TypeReference
                QualifiedName
                  Identifier: ' Debugger'
                  Identifier: 'Location'
            PropertySignature
              Identifier: '
            profile'
              TypeReference
                Identifier: ' Profile'
            PropertySignature
              Identifier: '
            /**
             * Profile title passed as an argument to console.profile().
             */
            title'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
      ModuleDeclaration
        Identifier: ' HeapProfiler'
        ModuleBlock
          TypeAliasDeclaration
            Identifier: ' HeapSnapshotObjectId'
            StringKeyword
          InterfaceDeclaration
            Identifier: ' SamplingHeapProfileNode'
            PropertySignature
              Identifier: '
            /**
             * Function location.
             */
            callFrame'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'CallFrame'
            PropertySignature
              Identifier: '
            /**
             * Allocations size in bytes for the node excluding children.
             */
            selfSize'
              NumberKeyword
            PropertySignature
              Identifier: '
            /**
             * Child nodes.
             */
            children'
              ArrayType
                TypeReference
                  Identifier: ' SamplingHeapProfileNode'
          InterfaceDeclaration
            Identifier: ' SamplingHeapProfile'
            PropertySignature
              Identifier: '
            head'
              TypeReference
                Identifier: ' SamplingHeapProfileNode'
          InterfaceDeclaration
            Identifier: ' StartTrackingHeapObjectsParameterType'
            PropertySignature
              Identifier: '
            trackAllocations'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' StopTrackingHeapObjectsParameterType'
            PropertySignature
              Identifier: '
            /**
             * If true 'reportHeapSnapshotProgress' events will be generated while snapshot is being taken when the tracking is stopped.
             */
            reportProgress'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' TakeHeapSnapshotParameterType'
            PropertySignature
              Identifier: '
            /**
             * If true 'reportHeapSnapshotProgress' events will be generated while snapshot is being taken.
             */
            reportProgress'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' GetObjectByHeapObjectIdParameterType'
            PropertySignature
              Identifier: '
            objectId'
              TypeReference
                Identifier: ' HeapSnapshotObjectId'
            PropertySignature
              Identifier: '
            /**
             * Symbolic group name that can be used to release multiple objects.
             */
            objectGroup'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' AddInspectedHeapObjectParameterType'
            PropertySignature
              Identifier: '
            /**
             * Heap snapshot object id to be accessible by means of $x command line API.
             */
            heapObjectId'
              TypeReference
                Identifier: ' HeapSnapshotObjectId'
          InterfaceDeclaration
            Identifier: ' GetHeapObjectIdParameterType'
            PropertySignature
              Identifier: '
            /**
             * Identifier of the object to get heap object id for.
             */
            objectId'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'RemoteObjectId'
          InterfaceDeclaration
            Identifier: ' StartSamplingParameterType'
            PropertySignature
              Identifier: '
            /**
             * Average sample interval in bytes. Poisson distribution is used for the intervals. The default value is 32768 bytes.
             */
            samplingInterval'
              QuestionToken
              UnionType
                NumberKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' GetObjectByHeapObjectIdReturnType'
            PropertySignature
              Identifier: '
            /**
             * Evaluation result.
             */
            result'
              TypeReference
                QualifiedName
                  Identifier: ' Runtime'
                  Identifier: 'RemoteObject'
          InterfaceDeclaration
            Identifier: ' GetHeapObjectIdReturnType'
            PropertySignature
              Identifier: '
            /**
             * Id of the heap snapshot object corresponding to the passed remote object id.
             */
            heapSnapshotObjectId'
              TypeReference
                Identifier: ' HeapSnapshotObjectId'
          InterfaceDeclaration
            Identifier: ' StopSamplingReturnType'
            PropertySignature
              Identifier: '
            /**
             * Recorded sampling heap profile.
             */
            profile'
              TypeReference
                Identifier: ' SamplingHeapProfile'
          InterfaceDeclaration
            Identifier: ' GetSamplingProfileReturnType'
            PropertySignature
              Identifier: '
            /**
             * Return the sampling profile being collected.
             */
            profile'
              TypeReference
                Identifier: ' SamplingHeapProfile'
          InterfaceDeclaration
            Identifier: ' AddHeapSnapshotChunkEventDataType'
            PropertySignature
              Identifier: '
            chunk'
              StringKeyword
          InterfaceDeclaration
            Identifier: ' ReportHeapSnapshotProgressEventDataType'
            PropertySignature
              Identifier: '
            done'
              NumberKeyword
            PropertySignature
              Identifier: '
            total'
              NumberKeyword
            PropertySignature
              Identifier: '
            finished'
              QuestionToken
              UnionType
                BooleanKeyword
                UndefinedKeyword
          InterfaceDeclaration
            Identifier: ' LastSeenObjectIdEventDataType'
            PropertySignature
              Identifier: '
            lastSeenObjectId'
              NumberKeyword
            PropertySignature
              Identifier: '
            timestamp'
              NumberKeyword
          InterfaceDeclaration
            Identifier: ' HeapStatsUpdateEventDataType'
            PropertySignature
              Identifier: '
            /**
             * An array of triplets. Each triplet describes a fragment. The first integer is the fragment index, the second integer is a total count of objects for the fragment, the third integer is a total size of the objects for the fragment.
             */
            statsUpdate'
              ArrayType
                NumberKeyword
      ModuleDeclaration
        Identifier: ' NodeTracing'
        ModuleBlock
          InterfaceDeclaration
            Identifier: ' TraceConfig'
            PropertySignature
              Identifier: '
            /**
             * Controls how the trace buffer stores data.
             */
            recordMode'
              QuestionToken
              UnionType
                StringKeyword
                UndefinedKeyword
            PropertySignature
              Identifier: '
            /**
             * Included category filters.
             */
            includedCategories'
              ArrayType
                StringKeyword
          InterfaceDeclaration
            Identifier: ' StartParameterType'
            PropertySignature
              Identifier: '
            traceConfig'
              TypeReference
                Identifier: ' TraceConfig'
          InterfaceDeclaration
            Identifier: ' GetCategoriesReturnType'
            PropertySignature
              Identifier: '
            /**
             * A list of supported tracing categories.
             */
            categories'
              ArrayType
                StringKeyword
          InterfaceDeclaration
            Identifier: ' DataCollectedEventDataType'
            PropertySignature
              Identifier: '
            value'
              TypeReference
                Identifier: ' Array'
                TypeLiteral
      ModuleDeclaration
        Identifier: ' NodeWorker'
        ModuleBlock
          TypeAliasDeclaration
            Identifier: ' WorkerID'
            StringKeyword
          TypeAliasDeclaration
            Identifier: ' SessionID'
            StringKeyword
          InterfaceDeclaration
            Identifier: ' WorkerInfo'
            PropertySignature
              Identifier: '
            workerId'
              TypeReference
                Identifier: ' WorkerID'
            PropertySignature
              Identifier: '
            type'
              StringKeyword
            PropertySignature
              Identifier: '
            title'
              StringKeyword
            PropertySignature
              Identifier: '
            url'
              StringKeyword
          InterfaceDeclaration
            Identifier: ' SendMessageToWorkerParameterType'
            PropertySignature
              Identifier: '
            message'
              StringKeyword
            PropertySignature
              Identifier: '
            /**
             * Identifier of the session.
             */
            sessionId'
              TypeReference
                Identifier: ' SessionID'
          InterfaceDeclaration
            Identifier: ' EnableParameterType'
            PropertySignature
              Identifier: '
            /**
             * Whether to new workers should be paused until the frontend sends `Runtime.runIfWaitingForDebugger`
             * message to run them.
             */
            waitForDebuggerOnStart'
              BooleanKeyword
          InterfaceDeclaration
            Identifier: ' DetachParameterType'
            PropertySignature
              Identifier: '
            sessionId'
              TypeReference
                Identifier: ' SessionID'
          InterfaceDeclaration
            Identifier: ' AttachedToWorkerEventDataType'
            PropertySignature
              Identifier: '
            /**
             * Identifier assigned to the session used to send/receive messages.
             */
            sessionId'
              TypeReference
                Identifier: ' SessionID'
            PropertySignature
              Identifier: '
            workerInfo'
              TypeReference
                Identifier: ' WorkerInfo'
            PropertySignature
              Identifier: '
            waitingForDebugger'
              BooleanKeyword
          InterfaceDeclaration
            Identifier: ' DetachedFromWorkerEventDataType'
            PropertySignature
              Identifier: '
            /**
             * Detached session identifier.
             */
            sessionId'
              TypeReference
                Identifier: ' SessionID'
          InterfaceDeclaration
            Identifier: ' ReceivedMessageFromWorkerEventDataType'
            PropertySignature
              Identifier: '
            /**
             * Identifier of a session which sends a message.
             */
            sessionId'
              TypeReference
                Identifier: ' SessionID'
            PropertySignature
              Identifier: '
            message'
              StringKeyword
      ModuleDeclaration
        Identifier: ' NodeRuntime'
        ModuleBlock
          InterfaceDeclaration
            Identifier: ' NotifyWhenWaitingForDisconnectParameterType'
            PropertySignature
              Identifier: '
            enabled'
              BooleanKeyword
      ClassDeclaration
        Identifier: ' Session'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' EventEmitter'
        Constructor
        MethodDeclaration
          Identifier: '

        /**
         * Connects a session to the inspector back-end.
         */
        connect'
          VoidKeyword
        MethodDeclaration
          Identifier: '

        /**
         * Connects a session to the inspector back-end.
         * An exception will be thrown if this API was not called on a Worker thread.
         * @since v12.11.0
         */
        connectToMainThread'
          VoidKeyword
        MethodDeclaration
          Identifier: '

        /**
         * Immediately close the session. All pending message callbacks will be called with an error.
         * `session.connect()` will need to be called to be able to send messages again.
         * Reconnected session will lose all inspector state, such as enabled agents or configured breakpoints.
         */
        disconnect'
          VoidKeyword
        MethodDeclaration
          Identifier: '

        /**
         * Posts a message to the inspector back-end. `callback` will be notified when
         * a response is received. `callback` is a function that accepts two optional
         * arguments: error and message-specific result.
         *
         * ```js
         * session.post('Runtime.evaluate', { expression: '2 + 2' },
         *              (error, { result }) => console.log(result));
         * // Output: { type: 'number', value: 4, description: '4' }
         * ```
         *
         * The latest version of the V8 inspector protocol is published on the
         * [Chrome DevTools Protocol Viewer](https://chromedevtools.github.io/devtools-protocol/v8/).
         *
         * Node.js inspector supports all the Chrome DevTools Protocol domains declared
         * by V8. Chrome DevTools Protocol domain provides an interface for interacting
         * with one of the runtime agents used to inspect the application state and listen
         * to the run-time events.
         */
        post'
          Parameter
            Identifier: 'method'
            StringKeyword
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                QuestionToken
                ObjectKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            StringKeyword
          Parameter
            Identifier: ' params'
            QuestionToken
            ObjectKeyword
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                QuestionToken
                ObjectKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns supported domains.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Schema'
                    Identifier: 'GetDomainsReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Evaluates expression on global object.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'EvaluateParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'EvaluateReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'EvaluateReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Add handler to promise with given promise object id.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'AwaitPromiseParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'AwaitPromiseReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'AwaitPromiseReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Calls function with given declaration on the given object. Object group of the result is inherited from the target object.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'CallFunctionOnParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'CallFunctionOnReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'CallFunctionOnReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns properties of a given object. Object group of the result is inherited from the target object.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'GetPropertiesParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'GetPropertiesReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'GetPropertiesReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Releases remote object with given id.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'ReleaseObjectParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Releases all remote objects that belong to a given group.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'ReleaseObjectGroupParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Tells inspected instance to run if it was waiting for debugger to attach.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Enables reporting of execution contexts creation by means of <code>executionContextCreated</code> event. When the reporting gets enabled the event will be sent immediately for each existing execution context.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Disables reporting of execution contexts creation.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Discards collected exceptions and console API calls.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * @experimental
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'SetCustomObjectFormatterEnabledParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Compiles expression.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'CompileScriptParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'CompileScriptReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'CompileScriptReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Runs script with given id in a given context.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'RunScriptParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'RunScriptReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'RunScriptReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'QueryObjectsParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'QueryObjectsReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'QueryObjectsReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns all let, const and class variables from global scope.
         */
        post'
          Parameter
            Identifier: '
            method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'GlobalLexicalScopeNamesParameterType'
          Parameter
            Identifier: '
            callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'GlobalLexicalScopeNamesReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Runtime'
                    Identifier: 'GlobalLexicalScopeNamesReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Enables debugger for the given page. Clients should not assume that the debugging has been enabled until the result for this command is received.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'EnableReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Disables debugger for given page.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Activates / deactivates all breakpoints on the page.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetBreakpointsActiveParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Makes page not interrupt on any pauses (breakpoint, exception, dom exception etc).
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetSkipAllPausesParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Sets JavaScript breakpoint at given location specified either by URL or URL regex. Once this command is issued, all existing parsed scripts will have breakpoints resolved and returned in <code>locations</code> property. Further matching script parsing will result in subsequent <code>breakpointResolved</code> events issued. This logical breakpoint will survive page reloads.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetBreakpointByUrlParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'SetBreakpointByUrlReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'SetBreakpointByUrlReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Sets JavaScript breakpoint at a given location.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetBreakpointParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'SetBreakpointReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'SetBreakpointReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Removes JavaScript breakpoint.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'RemoveBreakpointParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns possible locations for breakpoint. scriptId in start and end range locations should be the same.
         */
        post'
          Parameter
            Identifier: '
            method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'GetPossibleBreakpointsParameterType'
          Parameter
            Identifier: '
            callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'GetPossibleBreakpointsReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'GetPossibleBreakpointsReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Continues execution until specific location is reached.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'ContinueToLocationParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * @experimental
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'PauseOnAsyncCallParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Steps over the statement.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Steps into the function call.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'StepIntoParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Steps out of the function call.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Stops on the next JavaScript statement.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * This method is deprecated - use Debugger.stepInto with breakOnAsyncCall and Debugger.pauseOnAsyncTask instead. Steps into next scheduled async task if any is scheduled before next pause. Returns success when async task is actually scheduled, returns error if no task were scheduled or another scheduleStepIntoAsync was called.
         * @experimental
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Resumes JavaScript execution.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns stack trace with given <code>stackTraceId</code>.
         * @experimental
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'GetStackTraceParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'GetStackTraceReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'GetStackTraceReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Searches for given string in script content.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SearchInContentParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'SearchInContentReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'SearchInContentReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Edits JavaScript source live.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetScriptSourceParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'SetScriptSourceReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'SetScriptSourceReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Restarts particular call frame from the beginning.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'RestartFrameParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'RestartFrameReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'RestartFrameReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns source for the script with given id.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'GetScriptSourceParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'GetScriptSourceReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'GetScriptSourceReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Defines pause on exceptions state. Can be set to stop on all exceptions, uncaught exceptions or no exceptions. Initial pause on exceptions state is <code>none</code>.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetPauseOnExceptionsParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Evaluates expression on a given call frame.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'EvaluateOnCallFrameParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'EvaluateOnCallFrameReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Debugger'
                    Identifier: 'EvaluateOnCallFrameReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Changes value of variable in a callframe. Object-based scopes are not supported and must be mutated manually.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetVariableValueParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Changes return value in top frame. Available only at return break position.
         * @experimental
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetReturnValueParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Enables or disables async call stacks tracking.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetAsyncCallStackDepthParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Replace previous blackbox patterns with passed ones. Forces backend to skip stepping/pausing in scripts with url matching one of the patterns. VM will try to leave blackboxed script by performing 'step in' several times, finally resorting to 'step out' if unsuccessful.
         * @experimental
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetBlackboxPatternsParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Makes backend skip steps in the script in blackboxed ranges. VM will try leave blacklisted scripts by performing 'step in' several times, finally resorting to 'step out' if unsuccessful. Positions array contains positions where blackbox state is changed. First interval isn't blackboxed. Array should be sorted.
         * @experimental
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetBlackboxedRangesParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Enables console domain, sends the messages collected so far to the client by means of the <code>messageAdded</code> notification.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Disables console domain, prevents further console messages from being reported to the client.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Does nothing.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Changes CPU profiler sampling interval. Must be called before CPU profiles recording started.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Profiler'
                Identifier: 'SetSamplingIntervalParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Profiler'
                    Identifier: 'StopReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Enable precise code coverage. Coverage data for JavaScript executed before enabling precise code coverage may be incomplete. Enabling prevents running optimized code and resets execution counters.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Profiler'
                Identifier: 'StartPreciseCoverageParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Disable precise code coverage. Disabling releases unnecessary execution count records and allows executing optimized code.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Collect coverage data for the current isolate, and resets execution counters. Precise code coverage needs to have started.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Profiler'
                    Identifier: 'TakePreciseCoverageReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Collect coverage data for the current isolate. The coverage data may be incomplete due to garbage collection.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' Profiler'
                    Identifier: 'GetBestEffortCoverageReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' HeapProfiler'
                Identifier: 'StartTrackingHeapObjectsParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' HeapProfiler'
                Identifier: 'StopTrackingHeapObjectsParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' HeapProfiler'
                Identifier: 'TakeHeapSnapshotParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: '
            method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: '
            params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' HeapProfiler'
                Identifier: 'GetObjectByHeapObjectIdParameterType'
          Parameter
            Identifier: '
            callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' HeapProfiler'
                    Identifier: 'GetObjectByHeapObjectIdReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' HeapProfiler'
                    Identifier: 'GetObjectByHeapObjectIdReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Enables console to refer to the node with given id via $x (see Command Line API for more details $x functions).
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' HeapProfiler'
                Identifier: 'AddInspectedHeapObjectParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' HeapProfiler'
                Identifier: 'GetHeapObjectIdParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' HeapProfiler'
                    Identifier: 'GetHeapObjectIdReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' HeapProfiler'
                    Identifier: 'GetHeapObjectIdReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' HeapProfiler'
                Identifier: 'StartSamplingParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' HeapProfiler'
                    Identifier: 'StopSamplingReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' HeapProfiler'
                    Identifier: 'GetSamplingProfileReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Gets supported tracing categories.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              Parameter
                Identifier: ' params'
                TypeReference
                  QualifiedName
                    Identifier: ' NodeTracing'
                    Identifier: 'GetCategoriesReturnType'
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Start trace events collection.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' NodeTracing'
                Identifier: 'StartParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Stop trace events collection. Remaining collected events will be sent as a sequence of
         * dataCollected events followed by tracingComplete event.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Sends protocol message over session with given id.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' NodeWorker'
                Identifier: 'SendMessageToWorkerParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Instructs the inspector to attach to running workers. Will also attach to new workers
         * as they start
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' NodeWorker'
                Identifier: 'EnableParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Detaches from all running workers and disables attaching to new workers as they are started.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Detached from the worker with given sessionId.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' NodeWorker'
                Identifier: 'DetachParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Enable the NodeRuntime events except by `NodeRuntime.waitingForDisconnect`.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Disable NodeRuntime events
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Enable the `NodeRuntime.waitingForDisconnect`.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' NodeRuntime'
                Identifier: 'NotifyWhenWaitingForDisconnectParameterType'
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' callback'
            QuestionToken
            FunctionType
              Parameter
                Identifier: 'err'
                UnionType
                  TypeReference
                    Identifier: ' Error'
                  LiteralType
                    NullKeyword
              VoidKeyword
          VoidKeyword
        MethodDeclaration
          Identifier: '

        addListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Emitted when any notification from the V8 Inspector is received.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  ObjectKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new execution context is created.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextCreatedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when execution context is destroyed.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextDestroyedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when all executionContexts were cleared in browser
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when exception was thrown and unhandled.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionThrownEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when unhandled exception was revoked.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionRevokedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when console API was called.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ConsoleAPICalledEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when object should be inspected (for example, as a result of inspect() command line API call).
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'InspectRequestedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptParsedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine fails to parse the script.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptFailedToParseEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when breakpoint is resolved to an actual script and location.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'BreakpointResolvedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'PausedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine resumed execution.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new console message is added.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Console'
                      Identifier: 'MessageAddedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Sent when new profile recording is started using console.profile() call.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileStartedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileFinishedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'AddHeapSnapshotChunkEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'ReportHeapSnapshotProgressEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'LastSeenObjectIdEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend may send update for one or more fragments
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'HeapStatsUpdateEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Contains an bucket of collected trace events.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeTracing'
                      Identifier: 'DataCollectedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were
         * delivered via dataCollected events.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when attached to a worker.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'AttachedToWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when detached from the worker.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'DetachedFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Notifies about a new protocol message received from the session
         * (session ID is provided in attachedToWorker notification).
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'ReceivedMessageFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired instead of `Runtime.executionContextDestroyed` when
         * enabled.
         * It is fired when the Node process finished all code execution and is
         * waiting for all frontends to disconnect.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired when the runtime is waiting for the debugger. For
         * example, when inspector.waitingForDebugger is called
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            UnionType
              StringKeyword
              SymbolKeyword
          Parameter
            DotDotDotToken
            Identifier: 'args'
            ArrayType
              AnyKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              ObjectKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Runtime'
                  Identifier: 'ExecutionContextCreatedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Runtime'
                  Identifier: 'ExecutionContextDestroyedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Runtime'
                  Identifier: 'ExceptionThrownEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Runtime'
                  Identifier: 'ExceptionRevokedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Runtime'
                  Identifier: 'ConsoleAPICalledEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Runtime'
                  Identifier: 'InspectRequestedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Debugger'
                  Identifier: 'ScriptParsedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Debugger'
                  Identifier: 'ScriptFailedToParseEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Debugger'
                  Identifier: 'BreakpointResolvedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Debugger'
                  Identifier: 'PausedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Console'
                  Identifier: 'MessageAddedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Profiler'
                  Identifier: 'ConsoleProfileStartedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Profiler'
                  Identifier: 'ConsoleProfileFinishedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'HeapProfiler'
                  Identifier: 'AddHeapSnapshotChunkEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'HeapProfiler'
                  Identifier: 'ReportHeapSnapshotProgressEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'HeapProfiler'
                  Identifier: 'LastSeenObjectIdEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'HeapProfiler'
                  Identifier: 'HeapStatsUpdateEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'NodeTracing'
                  Identifier: 'DataCollectedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'NodeWorker'
                  Identifier: 'AttachedToWorkerEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'NodeWorker'
                  Identifier: 'DetachedFromWorkerEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'NodeWorker'
                  Identifier: 'ReceivedMessageFromWorkerEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Emitted when any notification from the V8 Inspector is received.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  ObjectKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new execution context is created.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextCreatedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when execution context is destroyed.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextDestroyedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when all executionContexts were cleared in browser
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when exception was thrown and unhandled.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionThrownEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when unhandled exception was revoked.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionRevokedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when console API was called.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ConsoleAPICalledEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when object should be inspected (for example, as a result of inspect() command line API call).
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'InspectRequestedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptParsedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine fails to parse the script.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptFailedToParseEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when breakpoint is resolved to an actual script and location.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'BreakpointResolvedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'PausedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine resumed execution.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new console message is added.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Console'
                      Identifier: 'MessageAddedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Sent when new profile recording is started using console.profile() call.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileStartedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileFinishedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'AddHeapSnapshotChunkEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'ReportHeapSnapshotProgressEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'LastSeenObjectIdEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend may send update for one or more fragments
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'HeapStatsUpdateEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Contains an bucket of collected trace events.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeTracing'
                      Identifier: 'DataCollectedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were
         * delivered via dataCollected events.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when attached to a worker.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'AttachedToWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when detached from the worker.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'DetachedFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Notifies about a new protocol message received from the session
         * (session ID is provided in attachedToWorker notification).
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'ReceivedMessageFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired instead of `Runtime.executionContextDestroyed` when
         * enabled.
         * It is fired when the Node process finished all code execution and is
         * waiting for all frontends to disconnect.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired when the runtime is waiting for the debugger. For
         * example, when inspector.waitingForDebugger is called
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Emitted when any notification from the V8 Inspector is received.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  ObjectKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new execution context is created.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextCreatedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when execution context is destroyed.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextDestroyedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when all executionContexts were cleared in browser
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when exception was thrown and unhandled.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionThrownEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when unhandled exception was revoked.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionRevokedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when console API was called.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ConsoleAPICalledEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when object should be inspected (for example, as a result of inspect() command line API call).
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'InspectRequestedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptParsedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine fails to parse the script.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptFailedToParseEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when breakpoint is resolved to an actual script and location.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'BreakpointResolvedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'PausedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine resumed execution.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new console message is added.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Console'
                      Identifier: 'MessageAddedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Sent when new profile recording is started using console.profile() call.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileStartedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileFinishedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'AddHeapSnapshotChunkEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'ReportHeapSnapshotProgressEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'LastSeenObjectIdEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend may send update for one or more fragments
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'HeapStatsUpdateEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Contains an bucket of collected trace events.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeTracing'
                      Identifier: 'DataCollectedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were
         * delivered via dataCollected events.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when attached to a worker.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'AttachedToWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when detached from the worker.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'DetachedFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Notifies about a new protocol message received from the session
         * (session ID is provided in attachedToWorker notification).
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'ReceivedMessageFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired instead of `Runtime.executionContextDestroyed` when
         * enabled.
         * It is fired when the Node process finished all code execution and is
         * waiting for all frontends to disconnect.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired when the runtime is waiting for the debugger. For
         * example, when inspector.waitingForDebugger is called
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Emitted when any notification from the V8 Inspector is received.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  ObjectKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new execution context is created.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextCreatedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when execution context is destroyed.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextDestroyedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when all executionContexts were cleared in browser
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when exception was thrown and unhandled.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionThrownEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when unhandled exception was revoked.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionRevokedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when console API was called.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ConsoleAPICalledEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when object should be inspected (for example, as a result of inspect() command line API call).
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'InspectRequestedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptParsedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine fails to parse the script.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptFailedToParseEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when breakpoint is resolved to an actual script and location.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'BreakpointResolvedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'PausedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine resumed execution.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new console message is added.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Console'
                      Identifier: 'MessageAddedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Sent when new profile recording is started using console.profile() call.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileStartedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileFinishedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'AddHeapSnapshotChunkEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'ReportHeapSnapshotProgressEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'LastSeenObjectIdEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend may send update for one or more fragments
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'HeapStatsUpdateEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Contains an bucket of collected trace events.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeTracing'
                      Identifier: 'DataCollectedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were
         * delivered via dataCollected events.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when attached to a worker.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'AttachedToWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when detached from the worker.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'DetachedFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Notifies about a new protocol message received from the session
         * (session ID is provided in attachedToWorker notification).
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'ReceivedMessageFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired instead of `Runtime.executionContextDestroyed` when
         * enabled.
         * It is fired when the Node process finished all code execution and is
         * waiting for all frontends to disconnect.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired when the runtime is waiting for the debugger. For
         * example, when inspector.waitingForDebugger is called
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Emitted when any notification from the V8 Inspector is received.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  ObjectKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new execution context is created.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextCreatedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when execution context is destroyed.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextDestroyedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when all executionContexts were cleared in browser
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when exception was thrown and unhandled.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionThrownEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when unhandled exception was revoked.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionRevokedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when console API was called.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ConsoleAPICalledEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when object should be inspected (for example, as a result of inspect() command line API call).
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'InspectRequestedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptParsedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine fails to parse the script.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptFailedToParseEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when breakpoint is resolved to an actual script and location.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'BreakpointResolvedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'PausedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine resumed execution.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new console message is added.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Console'
                      Identifier: 'MessageAddedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Sent when new profile recording is started using console.profile() call.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileStartedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileFinishedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'AddHeapSnapshotChunkEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'ReportHeapSnapshotProgressEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'LastSeenObjectIdEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend may send update for one or more fragments
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'HeapStatsUpdateEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Contains an bucket of collected trace events.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeTracing'
                      Identifier: 'DataCollectedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were
         * delivered via dataCollected events.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when attached to a worker.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'AttachedToWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when detached from the worker.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'DetachedFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Notifies about a new protocol message received from the session
         * (session ID is provided in attachedToWorker notification).
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'ReceivedMessageFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired instead of `Runtime.executionContextDestroyed` when
         * enabled.
         * It is fired when the Node process finished all code execution and is
         * waiting for all frontends to disconnect.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired when the runtime is waiting for the debugger. For
         * example, when inspector.waitingForDebugger is called
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
      FunctionDeclaration
        Identifier: ' open'
        Parameter
          Identifier: 'port'
          QuestionToken
          NumberKeyword
        Parameter
          Identifier: ' host'
          QuestionToken
          StringKeyword
        Parameter
          Identifier: ' wait'
          QuestionToken
          BooleanKeyword
        TypeReference
          Identifier: ' Disposable'
      FunctionDeclaration
        Identifier: ' close'
        VoidKeyword
      FunctionDeclaration
        Identifier: ' url'
        UnionType
          StringKeyword
          UndefinedKeyword
      FunctionDeclaration
        Identifier: ' waitForDebugger'
        VoidKeyword
      InterfaceDeclaration
        Identifier: ' InspectorConsole'
        MethodSignature
          Identifier: '
        debug'
          Parameter
            DotDotDotToken
            Identifier: 'data'
            ArrayType
              AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        error'
          Parameter
            DotDotDotToken
            Identifier: 'data'
            ArrayType
              AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        info'
          Parameter
            DotDotDotToken
            Identifier: 'data'
            ArrayType
              AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        log'
          Parameter
            DotDotDotToken
            Identifier: 'data'
            ArrayType
              AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        warn'
          Parameter
            DotDotDotToken
            Identifier: 'data'
            ArrayType
              AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        dir'
          Parameter
            DotDotDotToken
            Identifier: 'data'
            ArrayType
              AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        dirxml'
          Parameter
            DotDotDotToken
            Identifier: 'data'
            ArrayType
              AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        table'
          Parameter
            DotDotDotToken
            Identifier: 'data'
            ArrayType
              AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        trace'
          Parameter
            DotDotDotToken
            Identifier: 'data'
            ArrayType
              AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        group'
          Parameter
            DotDotDotToken
            Identifier: 'data'
            ArrayType
              AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        groupCollapsed'
          Parameter
            DotDotDotToken
            Identifier: 'data'
            ArrayType
              AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        groupEnd'
          Parameter
            DotDotDotToken
            Identifier: 'data'
            ArrayType
              AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        clear'
          Parameter
            DotDotDotToken
            Identifier: 'data'
            ArrayType
              AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        count'
          Parameter
            Identifier: 'label'
            QuestionToken
            AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        countReset'
          Parameter
            Identifier: 'label'
            QuestionToken
            AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        assert'
          Parameter
            Identifier: 'value'
            QuestionToken
            AnyKeyword
          Parameter
            DotDotDotToken
            Identifier: 'data'
            ArrayType
              AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        profile'
          Parameter
            Identifier: 'label'
            QuestionToken
            AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        profileEnd'
          Parameter
            Identifier: 'label'
            QuestionToken
            AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        time'
          Parameter
            Identifier: 'label'
            QuestionToken
            AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        timeLog'
          Parameter
            Identifier: 'label'
            QuestionToken
            AnyKeyword
          VoidKeyword
        MethodSignature
          Identifier: '
        timeStamp'
          Parameter
            Identifier: 'label'
            QuestionToken
            AnyKeyword
          VoidKeyword
      VariableStatement
        VariableDeclarationList
          VariableDeclaration
            Identifier: ' console'
            TypeReference
              Identifier: ' InspectorConsole'
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      ExportDeclaration
        StringLiteral
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      ImportEqualsDeclaration
        Identifier: ' EventEmitter'
        ExternalModuleReference
          StringLiteral
      ImportDeclaration
        ImportClause
          NamedImports
            ImportSpecifier
              Identifier: '
        open'
            ImportSpecifier
              Identifier: '
        close'
            ImportSpecifier
              Identifier: '
        url'
            ImportSpecifier
              Identifier: '
        waitForDebugger'
            ImportSpecifier
              Identifier: '
        console'
            ImportSpecifier
              Identifier: '
        InspectorNotification'
            ImportSpecifier
              Identifier: '
        Schema'
            ImportSpecifier
              Identifier: '
        Runtime'
            ImportSpecifier
              Identifier: '
        Debugger'
            ImportSpecifier
              Identifier: '
        Console'
            ImportSpecifier
              Identifier: '
        Profiler'
            ImportSpecifier
              Identifier: '
        HeapProfiler'
            ImportSpecifier
              Identifier: '
        NodeTracing'
            ImportSpecifier
              Identifier: '
        NodeWorker'
            ImportSpecifier
              Identifier: '
        NodeRuntime'
        StringLiteral
      ClassDeclaration
        Identifier: ' Session'
        HeritageClause
          ExpressionWithTypeArguments
            Identifier: ' EventEmitter'
        Constructor
        MethodDeclaration
          Identifier: '

        /**
         * Connects a session to the inspector back-end.
         */
        connect'
          VoidKeyword
        MethodDeclaration
          Identifier: '

        /**
         * Connects a session to the inspector back-end.
         * An exception will be thrown if this API was not called on a Worker thread.
         */
        connectToMainThread'
          VoidKeyword
        MethodDeclaration
          Identifier: '

        /**
         * Immediately close the session. All pending message callbacks will be called with an error.
         * `session.connect()` will need to be called to be able to send messages again.
         * Reconnected session will lose all inspector state, such as enabled agents or configured breakpoints.
         */
        disconnect'
          VoidKeyword
        MethodDeclaration
          Identifier: '

        /**
         * Posts a message to the inspector back-end.
         *
         * ```js
         * import { Session } from 'node:inspector/promises';
         * try {
         *   const session = new Session();
         *   session.connect();
         *   const result = await session.post('Runtime.evaluate', { expression: '2 + 2' });
         *   console.log(result);
         * } catch (error) {
         *   console.error(error);
         * }
         * // Output: { result: { type: 'number', value: 4, description: '4' } }
         * ```
         *
         * The latest version of the V8 inspector protocol is published on the
         * [Chrome DevTools Protocol Viewer](https://chromedevtools.github.io/devtools-protocol/v8/).
         *
         * Node.js inspector supports all the Chrome DevTools Protocol domains declared
         * by V8. Chrome DevTools Protocol domain provides an interface for interacting
         * with one of the runtime agents used to inspect the application state and listen
         * to the run-time events.
         */
        post'
          Parameter
            Identifier: 'method'
            StringKeyword
          Parameter
            Identifier: ' params'
            QuestionToken
            ObjectKeyword
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns supported domains.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Schema'
                Identifier: 'GetDomainsReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Evaluates expression on global object.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'EvaluateParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Runtime'
                Identifier: 'EvaluateReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Add handler to promise with given promise object id.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'AwaitPromiseParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Runtime'
                Identifier: 'AwaitPromiseReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Calls function with given declaration on the given object. Object group of the result is inherited from the target object.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'CallFunctionOnParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Runtime'
                Identifier: 'CallFunctionOnReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Returns properties of a given object. Object group of the result is inherited from the target object.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'GetPropertiesParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Runtime'
                Identifier: 'GetPropertiesReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Releases remote object with given id.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'ReleaseObjectParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Releases all remote objects that belong to a given group.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'ReleaseObjectGroupParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Tells inspected instance to run if it was waiting for debugger to attach.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Enables reporting of execution contexts creation by means of <code>executionContextCreated</code> event. When the reporting gets enabled the event will be sent immediately for each existing execution context.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Disables reporting of execution contexts creation.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Discards collected exceptions and console API calls.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * @experimental
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'SetCustomObjectFormatterEnabledParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Compiles expression.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'CompileScriptParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Runtime'
                Identifier: 'CompileScriptReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Runs script with given id in a given context.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'RunScriptParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Runtime'
                Identifier: 'RunScriptReturnType'
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'QueryObjectsParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Runtime'
                Identifier: 'QueryObjectsReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Returns all let, const and class variables from global scope.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Runtime'
                Identifier: 'GlobalLexicalScopeNamesParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Runtime'
                Identifier: 'GlobalLexicalScopeNamesReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Enables debugger for the given page. Clients should not assume that the debugging has been enabled until the result for this command is received.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Debugger'
                Identifier: 'EnableReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Disables debugger for given page.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Activates / deactivates all breakpoints on the page.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetBreakpointsActiveParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Makes page not interrupt on any pauses (breakpoint, exception, dom exception etc).
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetSkipAllPausesParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Sets JavaScript breakpoint at given location specified either by URL or URL regex. Once this command is issued, all existing parsed scripts will have breakpoints resolved and returned in <code>locations</code> property. Further matching script parsing will result in subsequent <code>breakpointResolved</code> events issued. This logical breakpoint will survive page reloads.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetBreakpointByUrlParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Debugger'
                Identifier: 'SetBreakpointByUrlReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Sets JavaScript breakpoint at a given location.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetBreakpointParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Debugger'
                Identifier: 'SetBreakpointReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Removes JavaScript breakpoint.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'RemoveBreakpointParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns possible locations for breakpoint. scriptId in start and end range locations should be the same.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'GetPossibleBreakpointsParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Debugger'
                Identifier: 'GetPossibleBreakpointsReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Continues execution until specific location is reached.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'ContinueToLocationParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * @experimental
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'PauseOnAsyncCallParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Steps over the statement.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Steps into the function call.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'StepIntoParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Steps out of the function call.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Stops on the next JavaScript statement.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * This method is deprecated - use Debugger.stepInto with breakOnAsyncCall and Debugger.pauseOnAsyncTask instead. Steps into next scheduled async task if any is scheduled before next pause. Returns success when async task is actually scheduled, returns error if no task were scheduled or another scheduleStepIntoAsync was called.
         * @experimental
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Resumes JavaScript execution.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Returns stack trace with given <code>stackTraceId</code>.
         * @experimental
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'GetStackTraceParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Debugger'
                Identifier: 'GetStackTraceReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Searches for given string in script content.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SearchInContentParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Debugger'
                Identifier: 'SearchInContentReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Edits JavaScript source live.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetScriptSourceParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Debugger'
                Identifier: 'SetScriptSourceReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Restarts particular call frame from the beginning.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'RestartFrameParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Debugger'
                Identifier: 'RestartFrameReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Returns source for the script with given id.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'GetScriptSourceParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Debugger'
                Identifier: 'GetScriptSourceReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Defines pause on exceptions state. Can be set to stop on all exceptions, uncaught exceptions or no exceptions. Initial pause on exceptions state is <code>none</code>.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetPauseOnExceptionsParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Evaluates expression on a given call frame.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'EvaluateOnCallFrameParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Debugger'
                Identifier: 'EvaluateOnCallFrameReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Changes value of variable in a callframe. Object-based scopes are not supported and must be mutated manually.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetVariableValueParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Changes return value in top frame. Available only at return break position.
         * @experimental
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetReturnValueParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Enables or disables async call stacks tracking.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetAsyncCallStackDepthParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Replace previous blackbox patterns with passed ones. Forces backend to skip stepping/pausing in scripts with url matching one of the patterns. VM will try to leave blackboxed script by performing 'step in' several times, finally resorting to 'step out' if unsuccessful.
         * @experimental
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetBlackboxPatternsParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Makes backend skip steps in the script in blackboxed ranges. VM will try leave blacklisted scripts by performing 'step in' several times, finally resorting to 'step out' if unsuccessful. Positions array contains positions where blackbox state is changed. First interval isn't blackboxed. Array should be sorted.
         * @experimental
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Debugger'
                Identifier: 'SetBlackboxedRangesParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Enables console domain, sends the messages collected so far to the client by means of the <code>messageAdded</code> notification.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Disables console domain, prevents further console messages from being reported to the client.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Does nothing.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Changes CPU profiler sampling interval. Must be called before CPU profiles recording started.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Profiler'
                Identifier: 'SetSamplingIntervalParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Profiler'
                Identifier: 'StopReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Enable precise code coverage. Coverage data for JavaScript executed before enabling precise code coverage may be incomplete. Enabling prevents running optimized code and resets execution counters.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' Profiler'
                Identifier: 'StartPreciseCoverageParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Disable precise code coverage. Disabling releases unnecessary execution count records and allows executing optimized code.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Collect coverage data for the current isolate, and resets execution counters. Precise code coverage needs to have started.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Profiler'
                Identifier: 'TakePreciseCoverageReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Collect coverage data for the current isolate. The coverage data may be incomplete due to garbage collection.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'Profiler'
                Identifier: 'GetBestEffortCoverageReturnType'
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' HeapProfiler'
                Identifier: 'StartTrackingHeapObjectsParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' HeapProfiler'
                Identifier: 'StopTrackingHeapObjectsParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' HeapProfiler'
                Identifier: 'TakeHeapSnapshotParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' HeapProfiler'
                Identifier: 'GetObjectByHeapObjectIdParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'HeapProfiler'
                Identifier: 'GetObjectByHeapObjectIdReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Enables console to refer to the node with given id via $x (see Command Line API for more details $x functions).
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' HeapProfiler'
                Identifier: 'AddInspectedHeapObjectParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' HeapProfiler'
                Identifier: 'GetHeapObjectIdParameterType'
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'HeapProfiler'
                Identifier: 'GetHeapObjectIdReturnType'
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' HeapProfiler'
                Identifier: 'StartSamplingParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'HeapProfiler'
                Identifier: 'StopSamplingReturnType'
        MethodDeclaration
          Identifier: '
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'HeapProfiler'
                Identifier: 'GetSamplingProfileReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Gets supported tracing categories.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            TypeReference
              QualifiedName
                Identifier: 'NodeTracing'
                Identifier: 'GetCategoriesReturnType'
        MethodDeclaration
          Identifier: '
        /**
         * Start trace events collection.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' NodeTracing'
                Identifier: 'StartParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Stop trace events collection. Remaining collected events will be sent as a sequence of
         * dataCollected events followed by tracingComplete event.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Sends protocol message over session with given id.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' NodeWorker'
                Identifier: 'SendMessageToWorkerParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Instructs the inspector to attach to running workers. Will also attach to new workers
         * as they start
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' NodeWorker'
                Identifier: 'EnableParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Detaches from all running workers and disables attaching to new workers as they are started.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Detached from the worker with given sessionId.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' NodeWorker'
                Identifier: 'DetachParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Enable the NodeRuntime events except by `NodeRuntime.waitingForDisconnect`.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Disable NodeRuntime events
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '
        /**
         * Enable the `NodeRuntime.waitingForDisconnect`.
         */
        post'
          Parameter
            Identifier: 'method'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' params'
            QuestionToken
            TypeReference
              QualifiedName
                Identifier: ' NodeRuntime'
                Identifier: 'NotifyWhenWaitingForDisconnectParameterType'
          TypeReference
            Identifier: ' Promise'
            VoidKeyword
        MethodDeclaration
          Identifier: '

        addListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Emitted when any notification from the V8 Inspector is received.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  ObjectKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new execution context is created.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextCreatedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when execution context is destroyed.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextDestroyedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when all executionContexts were cleared in browser
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when exception was thrown and unhandled.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionThrownEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when unhandled exception was revoked.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionRevokedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when console API was called.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ConsoleAPICalledEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when object should be inspected (for example, as a result of inspect() command line API call).
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'InspectRequestedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptParsedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine fails to parse the script.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptFailedToParseEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when breakpoint is resolved to an actual script and location.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'BreakpointResolvedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'PausedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine resumed execution.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new console message is added.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Console'
                      Identifier: 'MessageAddedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Sent when new profile recording is started using console.profile() call.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileStartedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileFinishedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'AddHeapSnapshotChunkEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'ReportHeapSnapshotProgressEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'LastSeenObjectIdEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend may send update for one or more fragments
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'HeapStatsUpdateEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Contains an bucket of collected trace events.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeTracing'
                      Identifier: 'DataCollectedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were
         * delivered via dataCollected events.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when attached to a worker.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'AttachedToWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when detached from the worker.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'DetachedFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Notifies about a new protocol message received from the session
         * (session ID is provided in attachedToWorker notification).
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'ReceivedMessageFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired instead of `Runtime.executionContextDestroyed` when
         * enabled.
         * It is fired when the Node process finished all code execution and is
         * waiting for all frontends to disconnect.
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired when the runtime is waiting for the debugger. For
         * example, when inspector.waitingForDebugger is called
         */
        addListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            UnionType
              StringKeyword
              SymbolKeyword
          Parameter
            DotDotDotToken
            Identifier: 'args'
            ArrayType
              AnyKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              ObjectKeyword
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Runtime'
                  Identifier: 'ExecutionContextCreatedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Runtime'
                  Identifier: 'ExecutionContextDestroyedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Runtime'
                  Identifier: 'ExceptionThrownEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Runtime'
                  Identifier: 'ExceptionRevokedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Runtime'
                  Identifier: 'ConsoleAPICalledEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Runtime'
                  Identifier: 'InspectRequestedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Debugger'
                  Identifier: 'ScriptParsedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Debugger'
                  Identifier: 'ScriptFailedToParseEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Debugger'
                  Identifier: 'BreakpointResolvedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Debugger'
                  Identifier: 'PausedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Console'
                  Identifier: 'MessageAddedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Profiler'
                  Identifier: 'ConsoleProfileStartedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'Profiler'
                  Identifier: 'ConsoleProfileFinishedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'HeapProfiler'
                  Identifier: 'AddHeapSnapshotChunkEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'HeapProfiler'
                  Identifier: 'ReportHeapSnapshotProgressEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'HeapProfiler'
                  Identifier: 'LastSeenObjectIdEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'HeapProfiler'
                  Identifier: 'HeapStatsUpdateEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'NodeTracing'
                  Identifier: 'DataCollectedEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'NodeWorker'
                  Identifier: 'AttachedToWorkerEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'NodeWorker'
                  Identifier: 'DetachedFromWorkerEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' message'
            TypeReference
              Identifier: ' InspectorNotification'
              TypeReference
                QualifiedName
                  Identifier: 'NodeWorker'
                  Identifier: 'ReceivedMessageFromWorkerEventDataType'
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        emit'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          BooleanKeyword
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Emitted when any notification from the V8 Inspector is received.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  ObjectKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new execution context is created.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextCreatedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when execution context is destroyed.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextDestroyedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when all executionContexts were cleared in browser
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when exception was thrown and unhandled.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionThrownEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when unhandled exception was revoked.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionRevokedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when console API was called.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ConsoleAPICalledEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when object should be inspected (for example, as a result of inspect() command line API call).
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'InspectRequestedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptParsedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine fails to parse the script.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptFailedToParseEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when breakpoint is resolved to an actual script and location.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'BreakpointResolvedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'PausedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine resumed execution.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new console message is added.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Console'
                      Identifier: 'MessageAddedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Sent when new profile recording is started using console.profile() call.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileStartedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileFinishedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'AddHeapSnapshotChunkEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'ReportHeapSnapshotProgressEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'LastSeenObjectIdEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend may send update for one or more fragments
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'HeapStatsUpdateEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Contains an bucket of collected trace events.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeTracing'
                      Identifier: 'DataCollectedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were
         * delivered via dataCollected events.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when attached to a worker.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'AttachedToWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when detached from the worker.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'DetachedFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Notifies about a new protocol message received from the session
         * (session ID is provided in attachedToWorker notification).
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'ReceivedMessageFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired instead of `Runtime.executionContextDestroyed` when
         * enabled.
         * It is fired when the Node process finished all code execution and is
         * waiting for all frontends to disconnect.
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired when the runtime is waiting for the debugger. For
         * example, when inspector.waitingForDebugger is called
         */
        on'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Emitted when any notification from the V8 Inspector is received.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  ObjectKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new execution context is created.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextCreatedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when execution context is destroyed.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextDestroyedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when all executionContexts were cleared in browser
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when exception was thrown and unhandled.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionThrownEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when unhandled exception was revoked.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionRevokedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when console API was called.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ConsoleAPICalledEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when object should be inspected (for example, as a result of inspect() command line API call).
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'InspectRequestedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptParsedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine fails to parse the script.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptFailedToParseEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when breakpoint is resolved to an actual script and location.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'BreakpointResolvedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'PausedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine resumed execution.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new console message is added.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Console'
                      Identifier: 'MessageAddedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Sent when new profile recording is started using console.profile() call.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileStartedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileFinishedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'AddHeapSnapshotChunkEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'ReportHeapSnapshotProgressEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'LastSeenObjectIdEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend may send update for one or more fragments
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'HeapStatsUpdateEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Contains an bucket of collected trace events.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeTracing'
                      Identifier: 'DataCollectedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were
         * delivered via dataCollected events.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when attached to a worker.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'AttachedToWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when detached from the worker.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'DetachedFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Notifies about a new protocol message received from the session
         * (session ID is provided in attachedToWorker notification).
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'ReceivedMessageFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired instead of `Runtime.executionContextDestroyed` when
         * enabled.
         * It is fired when the Node process finished all code execution and is
         * waiting for all frontends to disconnect.
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired when the runtime is waiting for the debugger. For
         * example, when inspector.waitingForDebugger is called
         */
        once'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Emitted when any notification from the V8 Inspector is received.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  ObjectKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new execution context is created.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextCreatedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when execution context is destroyed.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextDestroyedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when all executionContexts were cleared in browser
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when exception was thrown and unhandled.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionThrownEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when unhandled exception was revoked.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionRevokedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when console API was called.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ConsoleAPICalledEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when object should be inspected (for example, as a result of inspect() command line API call).
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'InspectRequestedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptParsedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine fails to parse the script.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptFailedToParseEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when breakpoint is resolved to an actual script and location.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'BreakpointResolvedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'PausedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine resumed execution.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new console message is added.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Console'
                      Identifier: 'MessageAddedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Sent when new profile recording is started using console.profile() call.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileStartedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileFinishedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'AddHeapSnapshotChunkEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'ReportHeapSnapshotProgressEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'LastSeenObjectIdEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend may send update for one or more fragments
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'HeapStatsUpdateEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Contains an bucket of collected trace events.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeTracing'
                      Identifier: 'DataCollectedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were
         * delivered via dataCollected events.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when attached to a worker.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'AttachedToWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when detached from the worker.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'DetachedFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Notifies about a new protocol message received from the session
         * (session ID is provided in attachedToWorker notification).
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'ReceivedMessageFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired instead of `Runtime.executionContextDestroyed` when
         * enabled.
         * It is fired when the Node process finished all code execution and is
         * waiting for all frontends to disconnect.
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired when the runtime is waiting for the debugger. For
         * example, when inspector.waitingForDebugger is called
         */
        prependListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            StringKeyword
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                DotDotDotToken
                Identifier: 'args'
                ArrayType
                  AnyKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Emitted when any notification from the V8 Inspector is received.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  ObjectKeyword
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new execution context is created.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextCreatedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when execution context is destroyed.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExecutionContextDestroyedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when all executionContexts were cleared in browser
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when exception was thrown and unhandled.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionThrownEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when unhandled exception was revoked.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ExceptionRevokedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when console API was called.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'ConsoleAPICalledEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when object should be inspected (for example, as a result of inspect() command line API call).
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Runtime'
                      Identifier: 'InspectRequestedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptParsedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when virtual machine fails to parse the script.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'ScriptFailedToParseEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when breakpoint is resolved to an actual script and location.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'BreakpointResolvedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Debugger'
                      Identifier: 'PausedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Fired when the virtual machine resumed execution.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when new console message is added.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Console'
                      Identifier: 'MessageAddedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Sent when new profile recording is started using console.profile() call.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileStartedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'Profiler'
                      Identifier: 'ConsoleProfileFinishedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'AddHeapSnapshotChunkEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'ReportHeapSnapshotProgressEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'LastSeenObjectIdEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * If heap objects tracking has been started then backend may send update for one or more fragments
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'HeapProfiler'
                      Identifier: 'HeapStatsUpdateEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Contains an bucket of collected trace events.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeTracing'
                      Identifier: 'DataCollectedEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were
         * delivered via dataCollected events.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when attached to a worker.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'AttachedToWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Issued when detached from the worker.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'DetachedFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * Notifies about a new protocol message received from the session
         * (session ID is provided in attachedToWorker notification).
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              Parameter
                Identifier: 'message'
                TypeReference
                  Identifier: ' InspectorNotification'
                  TypeReference
                    QualifiedName
                      Identifier: 'NodeWorker'
                      Identifier: 'ReceivedMessageFromWorkerEventDataType'
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired instead of `Runtime.executionContextDestroyed` when
         * enabled.
         * It is fired when the Node process finished all code execution and is
         * waiting for all frontends to disconnect.
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
        MethodDeclaration
          Identifier: '
        /**
         * This event is fired when the runtime is waiting for the debugger. For
         * example, when inspector.waitingForDebugger is called
         */
        prependOnceListener'
          Parameter
            Identifier: 'event'
            LiteralType
              StringLiteral
          Parameter
            Identifier: ' listener'
            FunctionType
              VoidKeyword
          ThisType
      ExportDeclaration
        NamedExports
          ExportSpecifier
            Identifier: '
        Session'
          ExportSpecifier
            Identifier: '
        open'
          ExportSpecifier
            Identifier: '
        close'
          ExportSpecifier
            Identifier: '
        url'
          ExportSpecifier
            Identifier: '
        waitForDebugger'
          ExportSpecifier
            Identifier: '
        console'
          ExportSpecifier
            Identifier: '
        InspectorNotification'
          ExportSpecifier
            Identifier: '
        Schema'
          ExportSpecifier
            Identifier: '
        Runtime'
          ExportSpecifier
            Identifier: '
        Debugger'
          ExportSpecifier
            Identifier: '
        Console'
          ExportSpecifier
            Identifier: '
        Profiler'
          ExportSpecifier
            Identifier: '
        HeapProfiler'
          ExportSpecifier
            Identifier: '
        NodeTracing'
          ExportSpecifier
            Identifier: '
        NodeWorker'
          ExportSpecifier
            Identifier: '
        NodeRuntime'
  ModuleDeclaration
    DeclareKeyword
    StringLiteral
    ModuleBlock
      ExportDeclaration
        StringLiteral
