name: Setup Go
description: Setup Go

inputs:
  go-version:
    description: Go version range to set up.
    default: '>=1.24.0'
  create:
    description: Create the cache
    default: 'false'

runs:
  using: composite

  steps:
    - name: Install Go
      id: install-go
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      with:
        go-version: ${{ inputs.go-version }}
        cache: false

    # Avoid hardcoding the cache keys more than once.
    - name: Create cache keys
      shell: bash
      id: cache-keys
      env:
        MODULES_KEY: go-modules-${{ runner.os }}-${{ steps.install-go.outputs.go-version }}-${{ hashFiles('**/go.sum', '**/Herebyfile.mjs', '**/.custom-gcl.yml', '**/.dprint.jsonc') }}
        BUILD_KEY: go-build-cache-${{ runner.os }}-${{ steps.install-go.outputs.go-version }}
      run: |
        echo "modules=$MODULES_KEY" >> $GITHUB_OUTPUT
        echo "build=$BUILD_KEY" >> $GITHUB_OUTPUT

    - if: ${{ inputs.create != 'true' }}
      name: Restore Go modules
      uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      with:
        key: ${{ steps.cache-keys.outputs.modules }}
        path: |
          ~/go/pkg/mod

    - if: ${{ inputs.create != 'true' }}
      name: Restore Go build cache
      uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      with:
        # key is unused, but a required input.
        key: ${{ steps.cache-keys.outputs.build }}-
        # Restore the most recent cache, ignoring the run ID.
        restore-keys: ${{ steps.cache-keys.outputs.build }}-
        path: |
          ~/.cache/go-build
          ~/Library/Caches/go-build
          ~/AppData/Local/go-build

    - name: Set mtimes
      shell: bash
      run: |
        find . -type f ! -path ./.git/\*\* | go run github.com/slsyy/mtimehash/cmd/mtimehash@v1.0.0 || true
        find . -type d ! -path ./.git/\*\* -exec touch -d '1970-01-01T00:00:01Z' {} + || true

    # All steps below are only run if the cache is being created.

    - if: ${{ inputs.create == 'true' }}
      shell: bash
      run: npm ci

    - if: ${{ inputs.create == 'true' }}
      shell: bash
      run: npx hereby build

    - if: ${{ inputs.create == 'true' }}
      shell: bash
      run: npx hereby test

    - if: ${{ inputs.create == 'true' }}
      shell: bash
      run: npx hereby lint

    - if: ${{ inputs.create == 'true' }}
      shell: bash
      run: npx dprint check

    - if: ${{ inputs.create == 'true' }}
      name: Save Go modules
      uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      with:
        key: ${{ steps.cache-keys.outputs.modules }}
        path: |
          ~/go/pkg/mod

    - if: ${{ inputs.create == 'true' }}
      name: Save Go build cache
      uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      with:
        # Save a new cache each time by including the unique run ID.
        key: ${{ steps.cache-keys.outputs.build }}-${{ github.run_id }}
        path: |
          ~/.cache/go-build
          ~/Library/Caches/go-build
          ~/AppData/Local/go-build
