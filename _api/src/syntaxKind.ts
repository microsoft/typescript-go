export type SyntaxKind = number;
const syntaxKind = {
    Unknown: 0,
    EndOfFile: 1,
    SingleLineCommentTrivia: 2,
    MultiLineCommentTrivia: 3,
    NewLineTrivia: 4,
    WhitespaceTrivia: 5,
    ConflictMarkerTrivia: 6,
    NonTextFileMarkerTrivia: 7,
    NumericLiteral: 8,
    BigIntLiteral: 9,
    StringLiteral: 10,
    JsxText: 11,
    JsxTextAllWhiteSpaces: 12,
    RegularExpressionLiteral: 13,
    NoSubstitutionTemplateLiteral: 14,
    TemplateHead: 15,
    TemplateMiddle: 16,
    TemplateTail: 17,
    OpenBraceToken: 18,
    CloseBraceToken: 19,
    OpenParenToken: 20,
    CloseParenToken: 21,
    OpenBracketToken: 22,
    CloseBracketToken: 23,
    DotToken: 24,
    DotDotDotToken: 25,
    SemicolonToken: 26,
    CommaToken: 27,
    QuestionDotToken: 28,
    LessThanToken: 29,
    LessThanSlashToken: 30,
    GreaterThanToken: 31,
    LessThanEqualsToken: 32,
    GreaterThanEqualsToken: 33,
    EqualsEqualsToken: 34,
    ExclamationEqualsToken: 35,
    EqualsEqualsEqualsToken: 36,
    ExclamationEqualsEqualsToken: 37,
    EqualsGreaterThanToken: 38,
    PlusToken: 39,
    MinusToken: 40,
    AsteriskToken: 41,
    AsteriskAsteriskToken: 42,
    SlashToken: 43,
    PercentToken: 44,
    PlusPlusToken: 45,
    MinusMinusToken: 46,
    LessThanLessThanToken: 47,
    GreaterThanGreaterThanToken: 48,
    GreaterThanGreaterThanGreaterThanToken: 49,
    AmpersandToken: 50,
    BarToken: 51,
    CaretToken: 52,
    ExclamationToken: 53,
    TildeToken: 54,
    AmpersandAmpersandToken: 55,
    BarBarToken: 56,
    QuestionToken: 57,
    ColonToken: 58,
    AtToken: 59,
    QuestionQuestionToken: 60,
    BacktickToken: 61,
    HashToken: 62,
    EqualsToken: 63,
    PlusEqualsToken: 64,
    MinusEqualsToken: 65,
    AsteriskEqualsToken: 66,
    AsteriskAsteriskEqualsToken: 67,
    SlashEqualsToken: 68,
    PercentEqualsToken: 69,
    LessThanLessThanEqualsToken: 70,
    GreaterThanGreaterThanEqualsToken: 71,
    GreaterThanGreaterThanGreaterThanEqualsToken: 72,
    AmpersandEqualsToken: 73,
    BarEqualsToken: 74,
    BarBarEqualsToken: 75,
    AmpersandAmpersandEqualsToken: 76,
    QuestionQuestionEqualsToken: 77,
    CaretEqualsToken: 78,
    Identifier: 79,
    PrivateIdentifier: 80,
    JSDocCommentTextToken: 81,
    BreakKeyword: 82,
    CaseKeyword: 83,
    CatchKeyword: 84,
    ClassKeyword: 85,
    ConstKeyword: 86,
    ContinueKeyword: 87,
    DebuggerKeyword: 88,
    DefaultKeyword: 89,
    DeleteKeyword: 90,
    DoKeyword: 91,
    ElseKeyword: 92,
    EnumKeyword: 93,
    ExportKeyword: 94,
    ExtendsKeyword: 95,
    FalseKeyword: 96,
    FinallyKeyword: 97,
    ForKeyword: 98,
    FunctionKeyword: 99,
    IfKeyword: 100,
    ImportKeyword: 101,
    InKeyword: 102,
    InstanceOfKeyword: 103,
    NewKeyword: 104,
    NullKeyword: 105,
    ReturnKeyword: 106,
    SuperKeyword: 107,
    SwitchKeyword: 108,
    ThisKeyword: 109,
    ThrowKeyword: 110,
    TrueKeyword: 111,
    TryKeyword: 112,
    TypeOfKeyword: 113,
    VarKeyword: 114,
    VoidKeyword: 115,
    WhileKeyword: 116,
    WithKeyword: 117,
    ImplementsKeyword: 118,
    InterfaceKeyword: 119,
    LetKeyword: 120,
    PackageKeyword: 121,
    PrivateKeyword: 122,
    ProtectedKeyword: 123,
    PublicKeyword: 124,
    StaticKeyword: 125,
    YieldKeyword: 126,
    AbstractKeyword: 127,
    AccessorKeyword: 128,
    AsKeyword: 129,
    AssertsKeyword: 130,
    AssertKeyword: 131,
    AnyKeyword: 132,
    AsyncKeyword: 133,
    AwaitKeyword: 134,
    BooleanKeyword: 135,
    ConstructorKeyword: 136,
    DeclareKeyword: 137,
    GetKeyword: 138,
    ImmediateKeyword: 139,
    InferKeyword: 140,
    IntrinsicKeyword: 141,
    IsKeyword: 142,
    KeyOfKeyword: 143,
    ModuleKeyword: 144,
    NamespaceKeyword: 145,
    NeverKeyword: 146,
    OutKeyword: 147,
    ReadonlyKeyword: 148,
    RequireKeyword: 149,
    NumberKeyword: 150,
    ObjectKeyword: 151,
    SatisfiesKeyword: 152,
    SetKeyword: 153,
    StringKeyword: 154,
    SymbolKeyword: 155,
    TypeKeyword: 156,
    UndefinedKeyword: 157,
    UniqueKeyword: 158,
    UnknownKeyword: 159,
    UsingKeyword: 160,
    FromKeyword: 161,
    GlobalKeyword: 162,
    BigIntKeyword: 163,
    OverrideKeyword: 164,
    OfKeyword: 165,
    QualifiedName: 166,
    ComputedPropertyName: 167,
    TypeParameter: 168,
    Parameter: 169,
    Decorator: 170,
    PropertySignature: 171,
    PropertyDeclaration: 172,
    MethodSignature: 173,
    MethodDeclaration: 174,
    ClassStaticBlockDeclaration: 175,
    Constructor: 176,
    GetAccessor: 177,
    SetAccessor: 178,
    CallSignature: 179,
    ConstructSignature: 180,
    IndexSignature: 181,
    TypePredicate: 182,
    TypeReference: 183,
    FunctionType: 184,
    ConstructorType: 185,
    TypeQuery: 186,
    TypeLiteral: 187,
    ArrayType: 188,
    TupleType: 189,
    OptionalType: 190,
    RestType: 191,
    UnionType: 192,
    IntersectionType: 193,
    ConditionalType: 194,
    InferType: 195,
    ParenthesizedType: 196,
    ThisType: 197,
    TypeOperator: 198,
    IndexedAccessType: 199,
    MappedType: 200,
    LiteralType: 201,
    NamedTupleMember: 202,
    TemplateLiteralType: 203,
    TemplateLiteralTypeSpan: 204,
    ImportType: 205,
    ObjectBindingPattern: 206,
    ArrayBindingPattern: 207,
    BindingElement: 208,
    ArrayLiteralExpression: 209,
    ObjectLiteralExpression: 210,
    PropertyAccessExpression: 211,
    ElementAccessExpression: 212,
    CallExpression: 213,
    NewExpression: 214,
    TaggedTemplateExpression: 215,
    TypeAssertionExpression: 216,
    ParenthesizedExpression: 217,
    FunctionExpression: 218,
    ArrowFunction: 219,
    DeleteExpression: 220,
    TypeOfExpression: 221,
    VoidExpression: 222,
    AwaitExpression: 223,
    PrefixUnaryExpression: 224,
    PostfixUnaryExpression: 225,
    BinaryExpression: 226,
    ConditionalExpression: 227,
    TemplateExpression: 228,
    YieldExpression: 229,
    SpreadElement: 230,
    ClassExpression: 231,
    OmittedExpression: 232,
    ExpressionWithTypeArguments: 233,
    AsExpression: 234,
    NonNullExpression: 235,
    MetaProperty: 236,
    SyntheticExpression: 237,
    SatisfiesExpression: 238,
    TemplateSpan: 239,
    SemicolonClassElement: 240,
    Block: 241,
    EmptyStatement: 242,
    VariableStatement: 243,
    ExpressionStatement: 244,
    IfStatement: 245,
    DoStatement: 246,
    WhileStatement: 247,
    ForStatement: 248,
    ForInStatement: 249,
    ForOfStatement: 250,
    ContinueStatement: 251,
    BreakStatement: 252,
    ReturnStatement: 253,
    WithStatement: 254,
    SwitchStatement: 255,
    LabeledStatement: 256,
    ThrowStatement: 257,
    TryStatement: 258,
    DebuggerStatement: 259,
    VariableDeclaration: 260,
    VariableDeclarationList: 261,
    FunctionDeclaration: 262,
    ClassDeclaration: 263,
    InterfaceDeclaration: 264,
    TypeAliasDeclaration: 265,
    EnumDeclaration: 266,
    ModuleDeclaration: 267,
    ModuleBlock: 268,
    CaseBlock: 269,
    NamespaceExportDeclaration: 270,
    ImportEqualsDeclaration: 271,
    ImportDeclaration: 272,
    ImportClause: 273,
    NamespaceImport: 274,
    NamedImports: 275,
    ImportSpecifier: 276,
    ExportAssignment: 277,
    ExportDeclaration: 278,
    NamedExports: 279,
    NamespaceExport: 280,
    ExportSpecifier: 281,
    MissingDeclaration: 282,
    ExternalModuleReference: 283,
    JsxElement: 284,
    JsxSelfClosingElement: 285,
    JsxOpeningElement: 286,
    JsxClosingElement: 287,
    JsxFragment: 288,
    JsxOpeningFragment: 289,
    JsxClosingFragment: 290,
    JsxAttribute: 291,
    JsxAttributes: 292,
    JsxSpreadAttribute: 293,
    JsxExpression: 294,
    JsxNamespacedName: 295,
    CaseClause: 296,
    DefaultClause: 297,
    HeritageClause: 298,
    CatchClause: 299,
    ImportAttributes: 300,
    ImportAttribute: 301,
    PropertyAssignment: 302,
    ShorthandPropertyAssignment: 303,
    SpreadAssignment: 304,
    EnumMember: 305,
    SourceFile: 306,
    Bundle: 307,
    JSDocTypeExpression: 308,
    JSDocNameReference: 309,
    JSDocMemberName: 310,
    JSDocAllType: 311,
    JSDocNullableType: 312,
    JSDocNonNullableType: 313,
    JSDocOptionalType: 314,
    JSDocVariadicType: 315,
    JSDoc: 316,
    JSDocText: 317,
    JSDocTypeLiteral: 318,
    JSDocSignature: 319,
    JSDocLink: 320,
    JSDocLinkCode: 321,
    JSDocLinkPlain: 322,
    JSDocTag: 323,
    JSDocAugmentsTag: 324,
    JSDocImplementsTag: 325,
    JSDocDeprecatedTag: 326,
    JSDocPublicTag: 327,
    JSDocPrivateTag: 328,
    JSDocProtectedTag: 329,
    JSDocReadonlyTag: 330,
    JSDocOverrideTag: 331,
    JSDocCallbackTag: 332,
    JSDocOverloadTag: 333,
    JSDocParameterTag: 334,
    JSDocReturnTag: 335,
    JSDocThisTag: 336,
    JSDocTypeTag: 337,
    JSDocTemplateTag: 338,
    JSDocTypedefTag: 339,
    JSDocSeeTag: 340,
    JSDocPropertyTag: 341,
    JSDocSatisfiesTag: 342,
    JSDocImportTag: 343,
    SyntaxList: 344,
    NotEmittedStatement: 345,
    PartiallyEmittedExpression: 346,
    CommaListExpression: 347,
    SyntheticReferenceExpression: 348,
    Count: 349,

    [0]: "Unknown",
    [1]: "EndOfFile",
    [2]: "SingleLineCommentTrivia",
    [3]: "MultiLineCommentTrivia",
    [4]: "NewLineTrivia",
    [5]: "WhitespaceTrivia",
    [6]: "ConflictMarkerTrivia",
    [7]: "NonTextFileMarkerTrivia",
    [8]: "NumericLiteral",
    [9]: "BigIntLiteral",
    [10]: "StringLiteral",
    [11]: "JsxText",
    [12]: "JsxTextAllWhiteSpaces",
    [13]: "RegularExpressionLiteral",
    [14]: "NoSubstitutionTemplateLiteral",
    [15]: "TemplateHead",
    [16]: "TemplateMiddle",
    [17]: "TemplateTail",
    [18]: "OpenBraceToken",
    [19]: "CloseBraceToken",
    [20]: "OpenParenToken",
    [21]: "CloseParenToken",
    [22]: "OpenBracketToken",
    [23]: "CloseBracketToken",
    [24]: "DotToken",
    [25]: "DotDotDotToken",
    [26]: "SemicolonToken",
    [27]: "CommaToken",
    [28]: "QuestionDotToken",
    [29]: "LessThanToken",
    [30]: "LessThanSlashToken",
    [31]: "GreaterThanToken",
    [32]: "LessThanEqualsToken",
    [33]: "GreaterThanEqualsToken",
    [34]: "EqualsEqualsToken",
    [35]: "ExclamationEqualsToken",
    [36]: "EqualsEqualsEqualsToken",
    [37]: "ExclamationEqualsEqualsToken",
    [38]: "EqualsGreaterThanToken",
    [39]: "PlusToken",
    [40]: "MinusToken",
    [41]: "AsteriskToken",
    [42]: "AsteriskAsteriskToken",
    [43]: "SlashToken",
    [44]: "PercentToken",
    [45]: "PlusPlusToken",
    [46]: "MinusMinusToken",
    [47]: "LessThanLessThanToken",
    [48]: "GreaterThanGreaterThanToken",
    [49]: "GreaterThanGreaterThanGreaterThanToken",
    [50]: "AmpersandToken",
    [51]: "BarToken",
    [52]: "CaretToken",
    [53]: "ExclamationToken",
    [54]: "TildeToken",
    [55]: "AmpersandAmpersandToken",
    [56]: "BarBarToken",
    [57]: "QuestionToken",
    [58]: "ColonToken",
    [59]: "AtToken",
    [60]: "QuestionQuestionToken",
    [61]: "BacktickToken",
    [62]: "HashToken",
    [63]: "EqualsToken",
    [64]: "PlusEqualsToken",
    [65]: "MinusEqualsToken",
    [66]: "AsteriskEqualsToken",
    [67]: "AsteriskAsteriskEqualsToken",
    [68]: "SlashEqualsToken",
    [69]: "PercentEqualsToken",
    [70]: "LessThanLessThanEqualsToken",
    [71]: "GreaterThanGreaterThanEqualsToken",
    [72]: "GreaterThanGreaterThanGreaterThanEqualsToken",
    [73]: "AmpersandEqualsToken",
    [74]: "BarEqualsToken",
    [75]: "BarBarEqualsToken",
    [76]: "AmpersandAmpersandEqualsToken",
    [77]: "QuestionQuestionEqualsToken",
    [78]: "CaretEqualsToken",
    [79]: "Identifier",
    [80]: "PrivateIdentifier",
    [81]: "JSDocCommentTextToken",
    [82]: "BreakKeyword",
    [83]: "CaseKeyword",
    [84]: "CatchKeyword",
    [85]: "ClassKeyword",
    [86]: "ConstKeyword",
    [87]: "ContinueKeyword",
    [88]: "DebuggerKeyword",
    [89]: "DefaultKeyword",
    [90]: "DeleteKeyword",
    [91]: "DoKeyword",
    [92]: "ElseKeyword",
    [93]: "EnumKeyword",
    [94]: "ExportKeyword",
    [95]: "ExtendsKeyword",
    [96]: "FalseKeyword",
    [97]: "FinallyKeyword",
    [98]: "ForKeyword",
    [99]: "FunctionKeyword",
    [100]: "IfKeyword",
    [101]: "ImportKeyword",
    [102]: "InKeyword",
    [103]: "InstanceOfKeyword",
    [104]: "NewKeyword",
    [105]: "NullKeyword",
    [106]: "ReturnKeyword",
    [107]: "SuperKeyword",
    [108]: "SwitchKeyword",
    [109]: "ThisKeyword",
    [110]: "ThrowKeyword",
    [111]: "TrueKeyword",
    [112]: "TryKeyword",
    [113]: "TypeOfKeyword",
    [114]: "VarKeyword",
    [115]: "VoidKeyword",
    [116]: "WhileKeyword",
    [117]: "WithKeyword",
    [118]: "ImplementsKeyword",
    [119]: "InterfaceKeyword",
    [120]: "LetKeyword",
    [121]: "PackageKeyword",
    [122]: "PrivateKeyword",
    [123]: "ProtectedKeyword",
    [124]: "PublicKeyword",
    [125]: "StaticKeyword",
    [126]: "YieldKeyword",
    [127]: "AbstractKeyword",
    [128]: "AccessorKeyword",
    [129]: "AsKeyword",
    [130]: "AssertsKeyword",
    [131]: "AssertKeyword",
    [132]: "AnyKeyword",
    [133]: "AsyncKeyword",
    [134]: "AwaitKeyword",
    [135]: "BooleanKeyword",
    [136]: "ConstructorKeyword",
    [137]: "DeclareKeyword",
    [138]: "GetKeyword",
    [139]: "ImmediateKeyword",
    [140]: "InferKeyword",
    [141]: "IntrinsicKeyword",
    [142]: "IsKeyword",
    [143]: "KeyOfKeyword",
    [144]: "ModuleKeyword",
    [145]: "NamespaceKeyword",
    [146]: "NeverKeyword",
    [147]: "OutKeyword",
    [148]: "ReadonlyKeyword",
    [149]: "RequireKeyword",
    [150]: "NumberKeyword",
    [151]: "ObjectKeyword",
    [152]: "SatisfiesKeyword",
    [153]: "SetKeyword",
    [154]: "StringKeyword",
    [155]: "SymbolKeyword",
    [156]: "TypeKeyword",
    [157]: "UndefinedKeyword",
    [158]: "UniqueKeyword",
    [159]: "UnknownKeyword",
    [160]: "UsingKeyword",
    [161]: "FromKeyword",
    [162]: "GlobalKeyword",
    [163]: "BigIntKeyword",
    [164]: "OverrideKeyword",
    [165]: "OfKeyword",
    [166]: "QualifiedName",
    [167]: "ComputedPropertyName",
    [168]: "TypeParameter",
    [169]: "Parameter",
    [170]: "Decorator",
    [171]: "PropertySignature",
    [172]: "PropertyDeclaration",
    [173]: "MethodSignature",
    [174]: "MethodDeclaration",
    [175]: "ClassStaticBlockDeclaration",
    [176]: "Constructor",
    [177]: "GetAccessor",
    [178]: "SetAccessor",
    [179]: "CallSignature",
    [180]: "ConstructSignature",
    [181]: "IndexSignature",
    [182]: "TypePredicate",
    [183]: "TypeReference",
    [184]: "FunctionType",
    [185]: "ConstructorType",
    [186]: "TypeQuery",
    [187]: "TypeLiteral",
    [188]: "ArrayType",
    [189]: "TupleType",
    [190]: "OptionalType",
    [191]: "RestType",
    [192]: "UnionType",
    [193]: "IntersectionType",
    [194]: "ConditionalType",
    [195]: "InferType",
    [196]: "ParenthesizedType",
    [197]: "ThisType",
    [198]: "TypeOperator",
    [199]: "IndexedAccessType",
    [200]: "MappedType",
    [201]: "LiteralType",
    [202]: "NamedTupleMember",
    [203]: "TemplateLiteralType",
    [204]: "TemplateLiteralTypeSpan",
    [205]: "ImportType",
    [206]: "ObjectBindingPattern",
    [207]: "ArrayBindingPattern",
    [208]: "BindingElement",
    [209]: "ArrayLiteralExpression",
    [210]: "ObjectLiteralExpression",
    [211]: "PropertyAccessExpression",
    [212]: "ElementAccessExpression",
    [213]: "CallExpression",
    [214]: "NewExpression",
    [215]: "TaggedTemplateExpression",
    [216]: "TypeAssertionExpression",
    [217]: "ParenthesizedExpression",
    [218]: "FunctionExpression",
    [219]: "ArrowFunction",
    [220]: "DeleteExpression",
    [221]: "TypeOfExpression",
    [222]: "VoidExpression",
    [223]: "AwaitExpression",
    [224]: "PrefixUnaryExpression",
    [225]: "PostfixUnaryExpression",
    [226]: "BinaryExpression",
    [227]: "ConditionalExpression",
    [228]: "TemplateExpression",
    [229]: "YieldExpression",
    [230]: "SpreadElement",
    [231]: "ClassExpression",
    [232]: "OmittedExpression",
    [233]: "ExpressionWithTypeArguments",
    [234]: "AsExpression",
    [235]: "NonNullExpression",
    [236]: "MetaProperty",
    [237]: "SyntheticExpression",
    [238]: "SatisfiesExpression",
    [239]: "TemplateSpan",
    [240]: "SemicolonClassElement",
    [241]: "Block",
    [242]: "EmptyStatement",
    [243]: "VariableStatement",
    [244]: "ExpressionStatement",
    [245]: "IfStatement",
    [246]: "DoStatement",
    [247]: "WhileStatement",
    [248]: "ForStatement",
    [249]: "ForInStatement",
    [250]: "ForOfStatement",
    [251]: "ContinueStatement",
    [252]: "BreakStatement",
    [253]: "ReturnStatement",
    [254]: "WithStatement",
    [255]: "SwitchStatement",
    [256]: "LabeledStatement",
    [257]: "ThrowStatement",
    [258]: "TryStatement",
    [259]: "DebuggerStatement",
    [260]: "VariableDeclaration",
    [261]: "VariableDeclarationList",
    [262]: "FunctionDeclaration",
    [263]: "ClassDeclaration",
    [264]: "InterfaceDeclaration",
    [265]: "TypeAliasDeclaration",
    [266]: "EnumDeclaration",
    [267]: "ModuleDeclaration",
    [268]: "ModuleBlock",
    [269]: "CaseBlock",
    [270]: "NamespaceExportDeclaration",
    [271]: "ImportEqualsDeclaration",
    [272]: "ImportDeclaration",
    [273]: "ImportClause",
    [274]: "NamespaceImport",
    [275]: "NamedImports",
    [276]: "ImportSpecifier",
    [277]: "ExportAssignment",
    [278]: "ExportDeclaration",
    [279]: "NamedExports",
    [280]: "NamespaceExport",
    [281]: "ExportSpecifier",
    [282]: "MissingDeclaration",
    [283]: "ExternalModuleReference",
    [284]: "JsxElement",
    [285]: "JsxSelfClosingElement",
    [286]: "JsxOpeningElement",
    [287]: "JsxClosingElement",
    [288]: "JsxFragment",
    [289]: "JsxOpeningFragment",
    [290]: "JsxClosingFragment",
    [291]: "JsxAttribute",
    [292]: "JsxAttributes",
    [293]: "JsxSpreadAttribute",
    [294]: "JsxExpression",
    [295]: "JsxNamespacedName",
    [296]: "CaseClause",
    [297]: "DefaultClause",
    [298]: "HeritageClause",
    [299]: "CatchClause",
    [300]: "ImportAttributes",
    [301]: "ImportAttribute",
    [302]: "PropertyAssignment",
    [303]: "ShorthandPropertyAssignment",
    [304]: "SpreadAssignment",
    [305]: "EnumMember",
    [306]: "SourceFile",
    [307]: "Bundle",
    [308]: "JSDocTypeExpression",
    [309]: "JSDocNameReference",
    [310]: "JSDocMemberName",
    [311]: "JSDocAllType",
    [312]: "JSDocNullableType",
    [313]: "JSDocNonNullableType",
    [314]: "JSDocOptionalType",
    [315]: "JSDocVariadicType",
    [316]: "JSDoc",
    [317]: "JSDocText",
    [318]: "JSDocTypeLiteral",
    [319]: "JSDocSignature",
    [320]: "JSDocLink",
    [321]: "JSDocLinkCode",
    [322]: "JSDocLinkPlain",
    [323]: "JSDocTag",
    [324]: "JSDocAugmentsTag",
    [325]: "JSDocImplementsTag",
    [326]: "JSDocDeprecatedTag",
    [327]: "JSDocPublicTag",
    [328]: "JSDocPrivateTag",
    [329]: "JSDocProtectedTag",
    [330]: "JSDocReadonlyTag",
    [331]: "JSDocOverrideTag",
    [332]: "JSDocCallbackTag",
    [333]: "JSDocOverloadTag",
    [334]: "JSDocParameterTag",
    [335]: "JSDocReturnTag",
    [336]: "JSDocThisTag",
    [337]: "JSDocTypeTag",
    [338]: "JSDocTemplateTag",
    [339]: "JSDocTypedefTag",
    [340]: "JSDocSeeTag",
    [341]: "JSDocPropertyTag",
    [342]: "JSDocSatisfiesTag",
    [343]: "JSDocImportTag",
    [344]: "SyntaxList",
    [345]: "NotEmittedStatement",
    [346]: "PartiallyEmittedExpression",
    [347]: "CommaListExpression",
    [348]: "SyntheticReferenceExpression",
    [349]: "Count",
} as const;

export const SyntaxKind = syntaxKind as typeof syntaxKind & { readonly [k: number]: string; };
